{"meta":{"title":"嵌入式小白|blog","subtitle":"IT技术交流","description":"IT技术交流 fengjinyuan's blog 计算机 计算机网络","author":"fengjinyuan","url":"http://fengjinyuan.github.io","root":"/"},"pages":[{"title":"关于","date":"2019-04-15T06:37:45.931Z","updated":"2019-04-15T06:37:45.931Z","comments":false,"path":"about/index.html","permalink":"http://fengjinyuan.github.io/about/index.html","excerpt":"","text":"&#x4E2A;&#x4EBA;&#x8BE6;&#x7EC6;&#x4ECB;&#x7ECD;"},{"title":"友情链接","date":"2019-04-15T06:37:45.931Z","updated":"2019-04-15T06:37:45.931Z","comments":true,"path":"links/index.html","permalink":"http://fengjinyuan.github.io/links/index.html","excerpt":"","text":""},{"title":"分类","date":"2019-04-15T06:37:45.931Z","updated":"2019-04-15T06:37:45.931Z","comments":false,"path":"categories/index.html","permalink":"http://fengjinyuan.github.io/categories/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2019-04-15T06:37:45.931Z","updated":"2019-04-15T06:37:45.931Z","comments":false,"path":"repository/index.html","permalink":"http://fengjinyuan.github.io/repository/index.html","excerpt":"","text":""},{"title":"书单","date":"2019-04-15T06:37:45.931Z","updated":"2019-04-15T06:37:45.931Z","comments":false,"path":"books/index.html","permalink":"http://fengjinyuan.github.io/books/index.html","excerpt":"","text":""},{"title":"标签","date":"2019-04-15T06:37:45.931Z","updated":"2019-04-15T06:37:45.931Z","comments":false,"path":"tags/index.html","permalink":"http://fengjinyuan.github.io/tags/index.html","excerpt":"","text":""},{"title":"404 Not Found：该页无法显示","date":"2019-04-15T06:37:45.921Z","updated":"2019-04-15T06:37:45.921Z","comments":false,"path":"/404.html","permalink":"http://fengjinyuan.github.io//404.html","excerpt":"","text":""}],"posts":[{"title":"[T]Build Linux Image towards Intel Galileo","slug":"T-Build-Linux-Image-towards-Intel-Galileo","date":"2019-06-17T08:09:35.000Z","updated":"2019-06-17T08:12:08.043Z","comments":true,"path":"2019/06/17/T-Build-Linux-Image-towards-Intel-Galileo/","link":"","permalink":"http://fengjinyuan.github.io/2019/06/17/T-Build-Linux-Image-towards-Intel-Galileo/","excerpt":"","text":"Build Linux Image towards Intel Galileo &#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x63CF;&#x8FF0;&#x5982;&#x4F55;&#x6784;&#x5EFA;Intel Galileo&#x5E73;&#x53F0;&#x7684;&#x5D4C;&#x5165;&#x5F0F;Linux&#x5185;&#x6838;&#x955C;&#x50CF;&#x3002;&#x4E3B;&#x8981;&#x6709;&#x4EE5;&#x4E0B;&#x4E24;&#x4E2A;&#x5DE5;&#x4F5C;&#xFF1A;1) &#x57FA;&#x4E8E;Yocto&#x5EFA;&#x7ACB;Liunx&#x955C;&#x50CF;&#x53CA;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF;2) &#x5229;&#x7528;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x7F16;&#x8BD1;&#x65B0;&#x7684;Linux&#x5185;&#x6838;&#x6E90;&#x7801; &#x6CE8;&#x610F;&#x4E8B;&#x9879; Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x4E3B;&#x673A;(Host Machine)&#x73AF;&#x5883;&#x5F88;&#x91CD;&#x8981;&#xFF01; Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x7FFB;&#x5899;&#x5F88;&#x91CD;&#x8981;&#xFF01; Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x8F6F;&#x4EF6;&#x5E93;&#x4F9D;&#x8D56;&#x5F88;&#x91CD;&#x8981;&#xFF01; &#x73AF;&#x5883;&#x63CF;&#x8FF0; &#x6784;&#x5EFA;&#x4E3B;&#x673A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;: Ubuntu 14.04 &#x5B9E;&#x9A8C;&#x51C6;&#x5907;&#x5B9E;&#x9A8C;&#x8981;&#x6C42;&#x4E3B;&#x8981;&#x5305;&#x62EC;&#x4EE5;&#x4E0B;&#x4E24;&#x70B9;&#xFF1A; Docker &#x5BB9;&#x5668;&#x5EFA;&#x7ACB; &#x4EE3;&#x7406;&#x914D;&#x7F6E;&#x4EE5;&#x4E0A;&#x5185;&#x5BB9;&#x53EF;&#x4EE5;&#x53C2;&#x8003; Customizing Linux Kernel with Yocto &#x5B9E;&#x9A8C;&#x8FC7;&#x7A0B;1.&#x5B89;&#x88C5;Yocto&#x5FC5;&#x8981;&#x7684;&#x8F6F;&#x4EF6;&#x5E93;&#x5728;&#x5BB9;&#x5668;&#x5B8C;&#x6210;123[host] docker start -i container_id[container] su root[container] apt-get install gawk wget git-core diffstat unzip texinfo gcc-multilib build-essential chrpath socat libsdl1.2-dev xterm make xsltproc docbook-utils fop dblatex xmlto autoconf automake libtool libglib2.0-dev screen 2.&#x83B7;&#x53D6;Intel Galileo BSP&#x6587;&#x4EF6;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x53BB;Intel&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;Intel Galileo BSP&#x6587;&#x4EF6;&#xFF0C;&#x4E0B;&#x8F7D;&#x5730;&#x5740;&#x5728;&#x6B64;,Intel Quark BSP&#x6211;&#x4EEC;&#x5148;&#x89E3;&#x538B;bsp_sources_and_docs_for_intel_quark_v1.1.0.zip&#x518D;&#x89E3;&#x538B;Board_Support_Package_Sources_for_Intel_Quark_v1.1.0.7z&#x590D;&#x5236;meta-clanton_v1.1.0-dirty.tar.gz&#x548C;quark_linux_v3.8.7+v1.1.0.tar.gz&#x5230;&#x6211;&#x4EEC;&#x7684;&#x672C;&#x673A;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;(&#x4E5F;&#x662F;Docker&#x6620;&#x5C04;&#x76EE;&#x5F55;&#xFF09;1234567# &#x8FDB;&#x5165;&#x672C;&#x673A;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;[host] cd /your/workdir/docker# &#x89E3;&#x538B;meta-clanton_v1.1.0-dirty.tar.gz&#x548C;quark_linux_v3.8.7+v1.1.0.tar.gz[host] tar -xzvf meta-clanton_v1.1.0-dirty.tar.gz[host] tar -xzvf quark_linux_v3.8.7+v1.1.0.tar.gz# &#x66F4;&#x6539;quark_linux_v3.8.7+v1.1.0&#x76EE;&#x5F55;&#x540D;&#x5B57;[host] mv quark_linux_v3.8.7+v1.1.0 linux_v3.8.7 3.&#x5728;&#x672C;&#x673A;&#x83B7;&#x53D6;Yocto Git&#x4ED3;&#x5E93;1234# &#x8FDB;&#x5165;&#x672C;&#x673A;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;[host] cd /your/workdir/docker/meta-clanton_v1.1.0-dirty# &#x6267;&#x884C;&#x811A;&#x672C;&#x83B7;&#x53D6;Git &#x8FDC;&#x7A0B;&#x4ED3;&#x5E93;[host] ./setup.sh -e meta-clanton-bsp 4.&#x7F16;&#x8BD1;Linux&#x955C;&#x50CF;&#x548C;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF; &#xFF08;&#x5BB9;&#x5668;&#x91CC;&#xFF09;123456[host] docker start -i container_id[container] su xxxx #&#x5207;&#x6362;&#x4E3A;&#x666E;&#x901A;&#x7528;&#x6237;[container] cd /workdir/meta-clanton_v1.1.0-dirty[container] source iot-devkit-init-build-env[container] bitbake image-full&#x7B49;&#x5F85;&#x4E00;&#x6BB5;&#x65F6;&#x95F4;&#x5B8C;&#x6210;Linux Image&#x7684;&#x6784;&#x5EFA; 5.&#x5728;&#x4E3B;&#x673A;&#x5229;&#x7528;&#x4E0A;&#x9762;&#x6784;&#x5EFA;&#x7684;&#x5DE5;&#x5177;&#x7F16;&#x8BD1;&#x4E00;&#x4E2A;&#x65B0;&#x7684;Linux&#x5185;&#x6838; &#xFF08;&#x672C;&#x673A;&#xFF09;123456789101112[host] cd /your/workdir/docker/linux_v3.8.7# &#x83B7;&#x53D6;Linux 3.8.7&#x5185;&#x6838;&#x6E90;&#x7801;&#x548C;&#x76F8;&#x5E94;&#x7684;&#x8865;&#x4E01;[host] ./gitsetup.py# &#x5728;&#x4E0B;&#x9762;&#x94FE;&#x63A5;&#x83B7;&#x53D6;Linux&#x5185;&#x6838;&#x914D;&#x7F6E;&#x6587;&#x4EF6;.configLink:https://github.com/slavaim/Linux-Intel-Galileo-Gen2-QuarkX1000/blob/master/BSPv1.1.0/linux_v3.8.7/work/.config# &#x590D;&#x5236;.config &#x6587;&#x4EF6;&#x5230;&#x65B0;&#x7684;&#x5185;&#x6838;&#x6E90;&#x7801;&#x4E0B;[host] cd work[host] copy &lt;download .config&gt; .config# &#x914D;&#x7F6E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#xFF08;&#x4E0A;&#x8FF0;&#x5DF2;&#x7ECF;&#x7F16;&#x8BD1;&#x751F;&#x6210;&#xFF09;[host] export PATH=/your/workdir/docker/meta-clanton_v1.1.0-dirty/build/tmp/sysroots/x86_64-linux/usr/bin/i586-poky-linux:$PATH# &#x7F16;&#x8BD1;&#x65B0;&#x5185;&#x6838; &#xFF08;&#x5728;Path/Linux_v3.8.7/work&#x76EE;&#x5F55;&#x4E0B;&#xFF09;[host] ARCH=i386 CROSS_COMPILE=i586-poky-linux- make -j4 PS: &#x4EE5;&#x4E0A;&#x94FE;&#x63A5;&#x9700;&#x8981;&#x7FFB;&#x5899;&#x8BBF;&#x95EE;&#xFF01; &#x6B22;&#x8FCE;&#x6307;&#x51FA;&#x9519;&#x8BEF;&#x548C;&#x8BA8;&#x8BBA;&#xFF0C;&#x8054;&#x7CFB;&#x65B9;&#x5F0F;: fengjinyuan@outlook.com","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]Costomizing Linux Kernel With Yocto","slug":"T-Costomizing-Linux-Kernel-With-Yocto","date":"2019-06-17T08:07:51.000Z","updated":"2019-06-17T08:11:23.352Z","comments":true,"path":"2019/06/17/T-Costomizing-Linux-Kernel-With-Yocto/","link":"","permalink":"http://fengjinyuan.github.io/2019/06/17/T-Costomizing-Linux-Kernel-With-Yocto/","excerpt":"","text":"Customizing Linux Kernel with Yocto &#x8FD9;&#x7BC7;&#x6587;&#x7AE0;&#x4E3B;&#x8981;&#x5B66;&#x4E60;&#x5982;&#x4F55;&#x4F7F;&#x7528;Yocto&#x6765;&#x5B9A;&#x5236;&#x81EA;&#x5DF1;&#x7684;Linux&#x5185;&#x6838;&#xFF0C;&#x901A;&#x8FC7;&#x5B8C;&#x6210;Hands on Kernel Lab&#x4E2D;&#x7684;&#x5B9E;&#x9A8C;&#x5230;&#x8FBE;&#x5B66;&#x4E60;&#x76EE;&#x7684;&#x3002;&#x4E0B;&#x9762;&#x4E3B;&#x8981;&#x9610;&#x8FF0;&#x4E66;&#x4E2D;&#x7684;LAB(1) &#x5B9E;&#x9A8C;&#x3002; &#x6CE8;&#x610F;&#x4E8B;&#x9879; Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x4E3B;&#x673A;(Host Machine)&#x73AF;&#x5883;&#x5F88;&#x91CD;&#x8981;&#xFF01; Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x7FFB;&#x5899;&#x5F88;&#x91CD;&#x8981;&#xFF01; Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x8F6F;&#x4EF6;&#x5E93;&#x4F9D;&#x8D56;&#x5F88;&#x91CD;&#x8981;&#xFF01; LAB(1)&#x73AF;&#x5883;&#x63CF;&#x8FF0;&#x7531;&#x4E8E;Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x5BF9;&#x4E3B;&#x673A;&#x73AF;&#x5883;&#x8981;&#x6C42;&#x5F88;&#x9AD8;&#xFF0C;&#x6240;&#x4EE5;&#x6700;&#x597D;&#x4E25;&#x683C;&#x6EE1;&#x8DB3;&#x7F16;&#x8BD1;&#x73AF;&#x5883;&#x7684;&#x9700;&#x6C42;&#x3002;&#x5C24;&#x5176;&#x5BF9;&#x4E8E;&#x4E3B;&#x673A;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x3002; &#x4E3B;&#x673A;&#x7CFB;&#x7EDF;: Ubuntu 12.04 &#x5B9E;&#x9A8C;&#x51C6;&#x5907; &#x7CFB;&#x7EDF;&#x51C6;&#x5907;&#x7531;&#x4E8E;Linux&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x4F9D;&#x8D56;&#x4E3B;&#x673A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7684;&#x53D1;&#x884C;&#x7248;&#x672C;&#xFF0C;&#x6240;&#x4EE5;&#x9700;&#x8981;&#x5B89;&#x88C5;&#x5BF9;&#x5E94;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7248;&#x672C;&#x3002;&#x4E0D;&#x53EF;&#x80FD;&#x6BCF;&#x6B21;&#x4E3A;&#x4E86;&#x7F16;&#x8BD1;&#x5185;&#x6838;&#x91CD;&#x65B0;&#x5B89;&#x88C5;&#x4E00;&#x904D;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x5229;&#x7528;Docker&#x6784;&#x5EFA;&#x4E3B;&#x673A;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x73AF;&#x5883;&#x3002;&#x6211;&#x4EEC;&#x9996;&#x5148;&#x9700;&#x8981;&#x5B89;&#x88C5;Docker&#xFF0C;&#x8FD9;&#x91CC;&#x4E0D;&#x518D;&#x5BF9;Docker&#x73AF;&#x5883;&#x642D;&#x5EFA;&#x8FDB;&#x884C;&#x53D9;&#x8FF0;&#xFF0C;&#x53EF;&#x4EE5;&#x770B;&#x5B98;&#x65B9;&#x6587;&#x6863;&#x5B8C;&#x6210;&#x3002;Docker Install &#x3002;&#x6211;&#x4EEC;&#x901A;&#x8FC7;Docker&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;Ubuntu12.04 &#x7684;&#x5BB9;&#x5668;(Container),&#x64CD;&#x4F5C;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;: 123456789101112131415#&#x83B7;&#x53D6;Ubuntu 12.04 &#x955C;&#x50CF;[Host] docker pull ubuntu:12.04 #&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BB9;&#x5668;&#xFF0C;/your/workdir/docker/&#x662F;&#x4F60;&#x672C;&#x673A;&#x7684;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;/workdir&#x662F;&#x5BB9;&#x5668;&#x91CC;&#x5DE5;&#x4F5C;&#x76EE;&#x5F55;&#xFF0C;&#x540C;&#x65F6;&#x5EFA;&#x7ACB;50000(&#x672C;&#x673A;):5900(&#x5BB9;&#x5668;)&#x7684;&#x7AEF;&#x53E3;&#x6620;&#x5C04;[Host] docker run -it -v /your/workdir/docker/:/workdir -p 50000:5900 ubuntu:12.04#&#x5F00;&#x542F;&#x5BB9;&#x5668;[Host] docker start -i container_id#&#x66F4;&#x65B0;&#x5BB9;&#x5668;&#x8F6F;&#x4EF6;&#x5E93;[container] apt-get update#&#x66F4;&#x6539;root&#x5BC6;&#x7801;[container] passwd root#&#x5EFA;&#x7ACB;&#x666E;&#x901A;&#x7528;&#x6237;[container] useradd -d /home/xxx -s /bin/bash -p ***** xxx[container] apt-get install sudo#&#x8D4B;&#x4E88;&#x666E;&#x901A;&#x7528;&#x6237;&#x8D85;&#x7EA7;&#x6743;&#x9650;[container] usermod -aG sudo xxx (or vim /etc/sudoer) &#x4EE3;&#x7406;&#x914D;&#x7F6E;&#x7531;&#x4E8E;&#x7F16;&#x8BD1;&#x5185;&#x6838;&#x8FC7;&#x7A0B;&#x4E2D;&#x9700;&#x8981;&#x8BB8;&#x591A;&#x7684;&#x8F6F;&#x4EF6;&#x5E93;&#x4F9D;&#x8D56;&#xFF0C;&#x8FD9;&#x4E9B;&#x4F9D;&#x8D56;&#x9700;&#x8981;&#x4E0B;&#x8F7D;&#xFF0C;&#x5BF9;&#x4E8E;&#x56FD;&#x5185;&#x7528;&#x6237;&#x6765;&#x8BF4;&#x8FD9;&#x4E9B;&#x4E0B;&#x8F7D;&#x975E;&#x5E38;&#x6162;&#xFF0C;&#x6216;&#x8005;&#x6839;&#x672C;&#x65E0;&#x6CD5;&#x4E0B;&#x8F7D;&#x3002;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x7FFB;&#x5899;(&#x914D;&#x7F6E;&#x4EE3;&#x7406;&#xFF09; &#xFF0C;&#x4E0B;&#x9762;&#x4E3B;&#x8981;&#x8BB2;&#x8FF0;&#x5982;&#x4F55;&#x914D;&#x7F6E;Git&#x4EE3;&#x7406;&#xFF0C;Docker&#x4EE3;&#x7406;&#x3002;1.Git&#x4EE3;&#x7406;&#x914D;&#x7F6E; 123456789101112# &#x914D;&#x7F6E; http://&#x534F;&#x8BAE;&#x7684;&#x4EE3;&#x7406; (PS: Git &#x652F;&#x6301;http:// &#x548C;git:// &#x548C; ssh://)git config --global http.proxy &apos;http://your_proxy_ip:port&apos; e.g &apos;http://127.0.0.1:8080&apos;git config --global https.proxy &apos;http://your_proxy_ip:port&apos; e.g &apos;http://127.0.0.1:8080&apos;git config --global socks5.proxy &apos;socks5://your_proxy_ip:port&apos; e.g &apos;socks5://127.0.0.1:8080&apos;# &#x53D6;&#x6D88; http://&#x534F;&#x8BAE;&#x7684;&#x4EE3;&#x7406;git config --global --unset http.proxygit config --global --unset https.proxygit config --global --unset socks5.proxy# &#x67E5;&#x770B; &#x914D;&#x7F6E;git config --list# &#x914D;&#x7F6E; git:// &#x534F;&#x8BAE;&#x4EE3;&#x7406;&#x53C2;&#x8003;&#x94FE;&#x63A5;&#x5982;&#x4E0B;:[Yocto Git Proxy](https://wiki.yoctoproject.org/wiki/Working_Behind_a_Network_Proxy) 2.Docker&#x4EE3;&#x7406;&#x914D;&#x7F6E;1234567891011121314# &#x521B;&#x5EFA;Docker&#x4EE3;&#x7406;&#x6587;&#x4EF6;[Host] cd etc/systemd/system/docker.service.d[Host] vim http-proxy.conf# &#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x5185;&#x5BB9;:[Service]Environment=&quot;HTTP_PROXY=http://your_proxy_ip:port/&quot; e.g &apos;http://127.0.0.1:8080&apos;Environment=&quot;HTTPS_PROXY=http://your_proxy_ip:port/&quot; e.g &apos;http://127.0.0.1:8080&apos;Environment=&quot;NO_PROXY=localhost,127.0.0.1&quot;# &#x91CD;&#x542F;Daemon[Host] systemctl daemon-reload# &#x91CD;&#x542F;Docker[Host] systemctl restart docker# &#x9A8C;&#x8BC1;&#x914D;&#x7F6E;[Host] systemctl show docker --property Environment &#x5B9E;&#x9A8C;&#x8FC7;&#x7A0B;1.&#x5B89;&#x88C5;Yocto&#x5FC5;&#x8981;&#x7684;&#x8F6F;&#x4EF6;&#x5E93; ( &#x5728;&#x5BB9;&#x5668;&#x5B8C;&#x6210;&#xFF09;123[host] docker start -i container_id[container] su root[container] apt-get install gawk wget git-core diffstat unzip texinfo build-essential chrpath libsdl1.2-dev xterm screen 2.git clone Yocto&#x73AF;&#x5883;&#x4E3A;&#x4E86;&#x9632;&#x6B62;Docker&#x91CC;&#x7684;&#x7F51;&#x7EDC;&#x4E0D;&#x7A33;&#x5B9A;&#xFF0C;&#x6211;&#x4EEC;&#x80FD;&#x5728;&#x672C;&#x673A;&#x4E0B;&#x5B8C;&#x6210;&#x7684; &#x64CD;&#x4F5C;&#x6216;&#x4E0B;&#x8F7D; &#x90FD;&#x5C3D;&#x53EF;&#x80FD;&#x5728;&#x672C;&#x673A;&#x5B8C;&#x6210;&#x3002;123456789# &#x8FDB;&#x5165;&#x672C;&#x673A;&#x4E0E;&#x5BB9;&#x5668;&#x6620;&#x5C04;&#x7684;&#x76EE;&#x5F55;[host] cd /your/workdir/docker[host] git clone git://git.yoctoproject.org/poky.git poky-danny-8.0.1[host] cd poky-danny-8.0.1[host] git checkout -b danny remotes/origin/danny# &#x4E0B;&#x8F7D;&#x5B9E;&#x9A8C;&#x5305;&#x5230; poky-danny-8.0.1 &#x76EE;&#x5F55;&#x4E0B;&#x4F60;&#x80FD;&#x5728;&#x8FD9;&#x4E2A;&#x94FE;&#x63A5;&#x91CC;&#x627E;&#x5230; elc-2013-layers.tar.bz2 Link: https://github.com/doothings/Yocto-101# &#x89E3;&#x538B;elc-2013-layers.tar.bz2 [host] bunzip2 -c elc-2013-layers.tar.bz2 | tar xvf - 3.&#x5728;&#x5BB9;&#x5668;&#x6784;&#x5EFA;Linux&#x955C;&#x50CF;&#x7136;&#x540E;&#x6211;&#x4EEC;&#x5F00;&#x59CB;&#x8FDB;&#x5165;&#x5BB9;&#x5668;&#x6784;&#x5EFA;Linux&#x5185;&#x6838;&#x3002; 1234567891011121314&#x6CE8;&#x610F;&#x6240;&#x6709;&#x64CD;&#x4F5C;&#x4EE5;&#x666E;&#x901A;&#x7528;&#x6237;&#x5B8C;&#x6210;&#x3002;[container] cd /wokdir/poky-danny-8.0.1[container] source oe-init-build-env # &#x8BBE;&#x7F6E;yocto&#x73AF;&#x5883;&#x53D8;&#x91CF;[container] vim conf/local.conf&#x53D6;&#x6D88;&#x6CE8;&#x91CA;&#x4E00;&#x4E0B;&#x51E0;&#x884C;BB_NUMBER_THREADS = &quot;4&quot;PARALLEL_MAKE = &quot;-j 4&quot;&#x5728; MACHINE ??= &#x201C;qemux86&#x201D;&#x4E0A;&#x9762;&#x6DFB;&#x52A0;&#x4E00;&#x884C; MACHINE ?= &quot;lab1-qemux86&quot;[container] vim conf/bblayers.conf&#x6DFB;&#x52A0;&#x4E00;&#x884C;&#x5185;&#x5BB9;&#x5982;&#x4E0B;:/workdir/poky-danny-8.0.1/meta-lab1-qemux86 \\# &#x6784;&#x5EFA;Linux&#x955C;&#x50CF; &#xFF0C;&#x8FD9;&#x4E00;&#x8FC7;&#x7A0B;&#x975E;&#x5E38;&#x6F2B;&#x957F;&#xFF0C;&#x4F46;&#x662F;&#x7531;&#x4E8E;&#x914D;&#x7F6E;&#x4E86;&#x4EE3;&#x7406;&#x8FD8;&#x662F;&#x5F88;&#x5FEB;&#x7684;[container] bitbake core-image-minimal &#x5F53;&#x5185;&#x6838;&#x7F16;&#x8BD1;&#x6210;&#x529F;&#x5E76;&#x6210;&#x529F;&#x751F;&#x6210;&#x955C;&#x50CF;&#x7684;&#x65F6;&#x5019;&#xFF0C;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;qemu&#x6765;&#x6A21;&#x62DF;&#x8FD0;&#x884C;&#x6211;&#x4EEC;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x4E86;&#x3002;4.Qemu&#x8FD0;&#x884C;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x7531;&#x4E8E;Docker &#x5BB9;&#x5668;&#x662F;&#x6587;&#x5B57;&#x7EC8;&#x7AEF;&#x4E0D;&#x80FD;&#x663E;&#x793A;&#x56FE;&#x5F62;&#x5316;&#x7A0B;&#x5E8F;&#xFF0C;&#x6545;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x76F4;&#x63A5;&#x5728;&#x5BB9;&#x5668;&#x8FD0;&#x884C;Qemu&#x3002;&#x8FD9;&#x91CC;&#x6709;&#x4E24;&#x4E2A;&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#xFF1A;1&#xFF09;&#x5728;&#x5BB9;&#x5668;&#x91CC;&#x5B89;&#x88C5;&#x56FE;&#x5F62;&#x754C;&#x9762;&#x670D;&#x52A1;&#xFF0C;&#x5EFA;&#x7ACB;VNCServer&#x3002;&#x7136;&#x540E;&#x5728;&#x4E3B;&#x673A;&#x4F7F;&#x7528;VNCClient&#x94FE;&#x63A5;&#x5BB9;&#x5668;&#x3002;&#x8FD9;&#x91CC;&#x5C31;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x56FE;&#x5F62;&#x754C;&#x9762;&#x7684;&#x65B9;&#x5F0F;&#x6765;&#x4F7F;&#x7528;&#x5BB9;&#x5668;&#xFF0C;&#x5219;&#x53EF;&#x4EE5;&#x8FD0;&#x884C;Qemu&#x3002;2&#xFF09;&#x66F4;&#x6539;Yocto&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x5728;&#x672C;&#x673A;&#xFF08;Host&#xFF09;&#x76F4;&#x63A5;&#x8FD0;&#x884C;Qemu&#x3002;&#x6211;&#x4EEC;&#x4E3B;&#x8981;&#x4F7F;&#x7528;&#x7B2C;&#x4E8C;&#x79CD;&#x65B9;&#x6CD5;&#x3002;123456789101112131415[host] gedit /your/workdir/docker/poky-danny-8.0.1/build/conf/bblayers.conf&#x66F4;&#x6539;&#x5176;&#x4E2D;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;&#x672C;&#x673A;&#x7684;&#x8DEF;&#x5F84;&#xFF1A;/workdir/xxxxx -&gt; /your/workdir/docker/xxxxx[host] gedit /your/workdir/docker/poky-danny-8.0.1/build/conf/sanity_info.conf&#x66F4;&#x6539;&#x5176;&#x4E2D;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;&#x672C;&#x673A;&#x7684;&#x8DEF;&#x5F84;&#xFF1A;/workdir/xxxxx -&gt; /your/workdir/docker/xxxxx[host] gedit /your/workdir/docker/poky-danny-8.0.1/build/tmp/saved_tmpdir&#x66F4;&#x6539;&#x5176;&#x4E2D;&#x7684;&#x8DEF;&#x5F84;&#x4E3A;&#x672C;&#x673A;&#x7684;&#x8DEF;&#x5F84;&#xFF1A;/workdir/xxxxx -&gt; /your/workdir/docker/xxxxx[host] cd /your/workdir/docker/poky-danny-8.0.1/[host] source oe-init-build-env # &#x8BBE;&#x7F6E;&#x5728;&#x672C;&#x673A;&#x7684;Yocto&#x73AF;&#x5883;&#x53D8;&#x91CF;[host] runqemu tmp/deploy/images/bzImage-lab1-qemux86.bin tmp/deploy/images/core-image-minimal-lab1-qemux86.ext3&#x6700;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6210;&#x529F;&#x8FD0;&#x884C;Qemu 5.&#x5B9A;&#x5236;&#x5185;&#x6838;&#x6709;&#x4E86;&#x524D;&#x9762;&#x7684;&#x57FA;&#x7840;&#xFF0C;&#x540E;&#x9762;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x5B9A;&#x5236;&#x81EA;&#x5DF1;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF0C;&#x53EF;&#x4EE5;&#x4FEE;&#x6539;&#xFF0C;&#x88C1;&#x526A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#x3002;&#x8FD9;&#x4E00;&#x90E8;&#x5206;&#x4E3B;&#x8981;&#x5728;&#x5BB9;&#x5668;&#x91CC;&#x5B8C;&#x6210;&#x3002;12345678910111213&#x6CE8;&#x610F;&#x524D;&#x9762;&#x4E3A;&#x4E86;&#x5728;&#x672C;&#x673A;&#x8FD0;&#x884C;qemu&#x6211;&#x4EEC;&#x6539;&#x52A8;&#x4E86;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#xFF0C;&#x5728;&#x5BB9;&#x5668;&#x4E0B;&#x64CD;&#x4F5C;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x5C06;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x6539;&#x52A8;&#x56DE;&#x6765;# &#x5B9A;&#x5236;&#x5185;&#x6838;[container] su xxxx #&#x666E;&#x901A;&#x7528;&#x6237;&#x8FD0;&#x884C;[container] cd /workdir/poky-danny-8.0.1/[container] source oe-init-build-env[container] script /dev/null[container] reset[container] bitbake linux -c menuconfig # &#x5C31;&#x53EF;&#x4EE5;&#x914D;&#x7F6E;Linux&#x5185;&#x6838;&#x6765;&#x8FBE;&#x5230;&#x5B9A;&#x5236;&#x7684;&#x76EE;&#x7684;&#x4E86;&#x4F1A;&#x4EA7;&#x751F;.config&#x6587;&#x4EF6;&#xFF0C;&#x8FD9;&#x4E2A;&#x6587;&#x4EF6;&#x63CF;&#x8FF0;&#x4E86;Linux&#x5185;&#x6838;&#x7684;&#x914D;&#x7F6E;&#x60C5;&#x51B5;[container] bitbake linux -c deploy&#x7136;&#x540E;&#x5C31;&#x53EF;&#x4EE5;&#x7528;Qemu&#x6765;&#x9A8C;&#x8BC1;&#x4FEE;&#x6539;&#x7684;Linux&#x5185;&#x6838; &#x53C2;&#x8003;&#x8D44;&#x6599; Yocto_Kernel_Dev Yocto_Project Docker_Proxy elc-2013-layers Yocto_Git_Proxy PS: &#x4EE5;&#x4E0A;&#x94FE;&#x63A5;&#x9700;&#x8981;&#x7FFB;&#x5899;&#x8BBF;&#x95EE;&#xFF01; &#x6B22;&#x8FCE;&#x6307;&#x51FA;&#x9519;&#x8BEF;&#x548C;&#x8BA8;&#x8BBA;&#xFF0C;&#x8054;&#x7CFB;&#x65B9;&#x5F0F;: fengjinyuan@outlook.com","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[R] quaternion formula","slug":"R-quaternion-formula","date":"2019-05-16T14:12:35.000Z","updated":"2019-06-06T11:00:53.806Z","comments":true,"path":"2019/05/16/R-quaternion-formula/","link":"","permalink":"http://fengjinyuan.github.io/2019/05/16/R-quaternion-formula/","excerpt":"","text":"","categories":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/categories/Research/"}],"tags":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/tags/Research/"}]},{"title":"[R] Rodrigues Formula","slug":"R-Rodrigues-Formula","date":"2019-05-16T14:06:54.000Z","updated":"2019-06-06T11:01:06.630Z","comments":true,"path":"2019/05/16/R-Rodrigues-Formula/","link":"","permalink":"http://fengjinyuan.github.io/2019/05/16/R-Rodrigues-Formula/","excerpt":"","text":"","categories":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/categories/Research/"}],"tags":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/tags/Research/"}]},{"title":"[T]基于Docker的DeepLearning平台","slug":"T-Build-DL-based-on-Docker","date":"2019-04-09T12:35:41.000Z","updated":"2019-06-06T11:01:20.007Z","comments":true,"path":"2019/04/09/T-Build-DL-based-on-Docker/","link":"","permalink":"http://fengjinyuan.github.io/2019/04/09/T-Build-DL-based-on-Docker/","excerpt":"","text":"","categories":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/categories/Research/"}],"tags":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/tags/Research/"}]},{"title":"[C]GCN+GAN+RL Summary","slug":"C-GCN-GAN-RL","date":"2019-04-09T09:15:22.000Z","updated":"2019-06-06T11:00:30.251Z","comments":true,"path":"2019/04/09/C-GCN-GAN-RL/","link":"","permalink":"http://fengjinyuan.github.io/2019/04/09/C-GCN-GAN-RL/","excerpt":"","text":"","categories":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/categories/Research/"}],"tags":[{"name":"Research","slug":"Research","permalink":"http://fengjinyuan.github.io/tags/Research/"}]},{"title":"[T]hadoop2.7.3 集群搭建(Ubuntu)","slug":"T-hadoop2-7-3-集群搭建","date":"2016-12-02T03:24:52.000Z","updated":"2019-06-06T11:03:27.566Z","comments":true,"path":"2016/12/02/T-hadoop2-7-3-集群搭建/","link":"","permalink":"http://fengjinyuan.github.io/2016/12/02/T-hadoop2-7-3-集群搭建/","excerpt":"","text":"hadoop2.7.3 &#x96C6;&#x7FA4;&#x642D;&#x5EFA;(Ubuntu)&#x73AF;&#x5883;&#x4ECB;&#x7ECD; &#x4E3B;&#x673A;(master)&#x7CFB;&#x7EDF;:Ubuntu 16.04 64bit&#x4ECE;&#x673A;(slave)&#x7CFB;&#x7EDF;:Ubuntu 14 64bit&#x4E3B;&#x673A;&#x6570;&#x91CF;: 1&#x4ECE;&#x673A;&#x6570;&#x91CF;: 2&#x4ECE;&#x673A;&#x5B89;&#x88C5;&#x5728;&#x865A;&#x62DF;&#x673A;(VirtualBox),&#x4E3B;&#x673A;&#x662F;&#x7269;&#x7406;&#x5B9E;&#x4F53;&#x673A; &#x51C6;&#x5907;&#x5DE5;&#x4F5C;1.&#x642D;&#x5EFA;&#x4E3B;&#x4ECE;&#x673A;&#x5C40;&#x57DF;&#x7F51; &#x66F4;&#x6539; &#x4E3B;&#x673A; &#x4ECE;&#x673A; &#x673A;&#x5668;&#x540D;12&#x4E3B;&#x673A;: sudo vi /etc/hostname &#x66F4;&#x6539;&#x4E3B;&#x673A;&#x540D; &#x4E3A;master &#x91CD;&#x542F;&#x4ECE;&#x673A;: sudo vi /etc/hostname &#x66F4;&#x6539;&#x4E3B;&#x673A;&#x540D; &#x4E3A;slave(&#x4ECE;&#x673A;&#x7F16;&#x53F7;),&#x4F8B;&#x5982; slave0,slave1 &#x7136;&#x540E;&#x91CD;&#x542F; &#x8BBE;&#x7F6E;&#x865A;&#x62DF;&#x673A;&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E;&#x5728;VirtualBox&#x7684;&#x5168;&#x5C40;&#x8BBE;&#x5B9A; -&gt;&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E; -&gt; &#x5728;(Host-Only)&#x7F51;&#x7EDC;&#x90A3;&#x680F; &#x6DFB;&#x52A0;&#x65B0;&#x7684;Host-Only&#x7F51;&#x7EDC;&#x5728;{&#x5404;&#x4E2A;}&#x4ECE;&#x673A;&#x7684;&#x7F51;&#x7EDC;&#x8BBE;&#x7F6E;&#x91CC; &#x9009;&#x7740;&#x8FDE;&#x63A5;&#x65B9;&#x5F0F;:(Host-Only) &#x754C;&#x9762;&#x540D;&#x79F0;:&#x9009;&#x62E9; &#x521A;&#x624D;&#x65B0;&#x5EFA;&#x7684;Host-Only&#x7F51;&#x7EDC; &#x4E3B;&#x673A;&#x4E0E;&#x4ECE;&#x673A;,&#x4ECE;&#x673A;&#x4E0E;&#x4ECE;&#x673A; &#x4E92;&#x901A; 12&#x4E3B;&#x673A;: ping slave0&#x2019;s IP ping slave1&#x2019;S IP &#x5404;&#x4E2A;&#x4ECE;&#x673A;: ping master&#x2019;s IP PS:&#x6709;&#x9632;&#x706B;&#x8BF7;&#x7684;&#x5173;&#x9632;&#x706B;&#x5899;,&#x5F00;&#x542F;SELINUX&#x5173;&#x6389; &#x4FEE;&#x6539;/etc/hosts 123456&#x4E3B;&#x673A;: vi /etc/hosts127.0.0.1 localhost192.168.56.1 master192.168.56.101 slave0192.168.56.101 slave0&#x4ECE;&#x673A;:&#x540C;&#x4E0A; PS: IP&#x6620;&#x5C04;(/etc/hosts)&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x8BBE;&#x5B9A;&#x7684;&#x5C40;&#x57DF;&#x7F51;&#x73AF;&#x5883;&#x800C;&#x5B9A; 2.&#x5B89;&#x88C5;JDK&#x4E3B;&#x673A;&#x548C;&#x4ECE;&#x673A;&#x90FD;&#x8981;&#x5B89;&#x88C5;JDK,JDK&#x4E0B;&#x8F7D;&#x5730;&#x5740;:http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html&#x4E0B;&#x8F7D;jdk-8u111-linux-x64.tar.gz 123456789101112131415 &#x89E3;&#x538B;jdk-8u111-linux-x64.tar.gz cd /usr/local sudo tar -zxvf jdk-8u111-linux-x64.tar.gz mv &#x89E3;&#x538B;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x5939;/ jdk1.8/ &#x914D;&#x7F6E;&#x73AF;&#x5883;&#x53D8;&#x91CF;sudo vi /etc/profileexport JAVA_HOME=/usr/local/jdk1.8export CLASSPATH=.:$JAVA_HOME/jre/lib:$JAVA_HOME/lib/tools.jarexport JAVA_JRE=$JAVA_HOME/jreexport PATH=$JAVA_HOME/bin:$PATH&#x4FDD;&#x5B58;profile&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x751F;&#x6548;:source /etc/profile&#x6D4B;&#x8BD5;java&#x73AF;&#x5883;&#x914D;&#x7F6E;&#x6210;&#x529F;java -version&#x663E;&#x793A;&#x6B63;&#x786E;&#x7248;&#x672C;OK 3.&#x5B89;&#x88C5;SSH&#x4E3B;&#x673A;&#x4ECE;&#x673A;&#x90FD;&#x8981;&#x5B89;&#x88C5;SSH1234sudo apt-get install openssh-server&#x67E5;&#x770B;ssd&#x662F;&#x5426;&#x542F;&#x52A8;pstree&#x5728;&#x76EE;&#x5F55;&#x6811;&#x4E0A;&#x627E;&#x5230;sshdOK 4.&#x65B0;&#x5EFA;hadoop&#x7528;&#x6237;&#x4E3B;&#x673A;&#x4ECE;&#x673A;&#x90FD;&#x8981;&#x65B0;&#x5EFA;hadoop&#x7528;&#x6237;1234sudo addgroup hadoopsudo adduser -ingroup hadoop hadoopsudo vi /etc/sudoers&#x6DFB;&#x52A0; hadoop ALL=(ALL:ALL) ALL &#x5982;&#x4E0B;&#x56FE; 5.SSH&#x65E0;&#x79D8;&#x94A5;&#x767B;&#x5F55; 123456789101112131415161718192021222324252627 &#x4E3B;&#x673A;&#x4E0A;&#xFF1A; &#x767B;&#x5165;hadoop&#x7528;&#x6237; su hadoop cd /home/hadoop ssh-keygen -t rsa -P &quot;&quot; &#x5F53;&#x524D;&#x76EE;&#x5F55;&#x4E0B;&#x4F1A;&#x4EA7;&#x751F;.ssh &#x76EE;&#x5F55; cd .ssh cat id_rsa.pub &gt;&gt; authorized_keys &#x4ECE;&#x673A;&#x4E0A;: su hadoop cd /home/hadoop ssh-keygen -t rsa -P &quot;&quot; &#x4E3B;&#x673A;&#x4E0A;&#xFF1A; cd /home/hadoop/.ssh scp authorized_keys hadoop@slave{&#x7F16;&#x53F7;}&#xFF1A;~/.ssh/ &#x4F8B;&#x5982;:scp authorized_keys hadoop@slave0&#xFF1A;~/.ssh/scp authorized_keys hadoop@slave1&#xFF1A;~/.ssh/&#x6D4B;&#x8BD5;&#x65E0;&#x79D8;&#x94A5;&#x767B;&#x5F55;&#xFF1A;ssh hadoop@slave0&#x65E0;&#x9700;&#x8F93;&#x5BC6;&#x7801;&#x5219;&#x6210;&#x529F;&#x4ECE;&#x673A;&#x4E0A;&#xFF1A;&#x5C06;&#x4ECE;&#x673A;&#x7684;&#x516C;&#x94A5;&#x7ED9;&#x4E3B;&#x673A;cd /home/hadoop/.sshssh-copy-id master&#x6D4B;&#x8BD5;&#x65E0;&#x79D8;&#x94A5;&#x767B;&#x5F55;&#xFF1A;ssh hadoop@master&#x65E0;&#x9700;&#x8F93;&#x5BC6;&#x7801;&#x5219;&#x6210;&#x529F; PS:ssh hadoop@master &#x5982;&#x679C;&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x9519;&#x8BEF;&#x901A;&#x8FC7;&#x4EE5;&#x4E0B;&#x56FE;&#x7247;&#x627E;&#x5230;&#x81EA;&#x5DF1;&#x5BF9;&#x5E94;&#x7684;&#x9519;&#x8BEF;&#x5E8F;&#x53F7;,&#x5C06;.ssh/known_hosts&#x6587;&#x4EF6;&#x4E2D;&#x5BF9;&#x5E94;&#x5E8F;&#x53F7;&#x7684;&#x6BB5;&#x5220;&#x9664; &#x5B89;&#x88C5;Hadoop&#x5148;&#x53BB;&#x4E0B;&#x8F7D;hadoop,&#x4E0B;&#x8F7D;&#x5730;&#x5740;:http://hadoop.apache.org/releases.html&#x4E0B;&#x8F7D;hadoop-2.7.3.tar.gz1234&#x4E3B;&#x673A;&#x4E0A;&#xFF1A;&#x5C06;&#x5176;&#x89E3;&#x538B;&#x5230;/home/hadoop/&#x4E0B;tar -zxvf hadoop-2.7.3.tar.gzmv &#x89E3;&#x538B;&#x540E;&#x7684;&#x6587;&#x4EF6;&#x5939;&#x540D; hadoop &#x914D;&#x7F6E;hadoop&#x4E3B;&#x673A;&#x4E0A;&#xFF1A;cd /home/hadoop/etc/hadoop vi hadoop-env.sh vi core-site.xml vi hdfs-site.xml vi mapred-site.xml vi yarn-site.xml vi slaves &#x590D;&#x5236;&#x7ED9;&#x4ECE;&#x673A;scp -r /home/hadoop/hadoop hadoop@slave0:/home/hadoopscp -r /home/hadoop/hadoop hadoop@slave1:/home/hadoop &#x542F;&#x52A8;hadoop123456&#x4E3B;&#x673A;&#x4E0A;&#xFF1A;cd /home/hadoop/hadoop/bin./hdfs namenode -formatcd /home/hadoop/hadoop/sbin./start-all.sh&#x6D4F;&#x89C8;&#x5668;&#x8BBF;&#x95EE;&#xFF1A;master:50070","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]MicroZed的Linux移植","slug":"T-MicroZed的Linux移植","date":"2016-10-09T23:05:40.000Z","updated":"2019-06-06T11:58:30.288Z","comments":true,"path":"2016/10/10/T-MicroZed的Linux移植/","link":"","permalink":"http://fengjinyuan.github.io/2016/10/10/T-MicroZed的Linux移植/","excerpt":"","text":"MicroZed Linux&#x79FB;&#x690D;&#x4E0E;&#x7F16;&#x7A0B;&#x64CD;&#x4F5C;&#x73AF;&#x5883; &#x4E3B;&#x673A;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;:ubuntu16.04&#x865A;&#x62DF;&#x673A;&#x7CFB;&#x7EDF;:win7(sp1) &#x5DE5;&#x4F5C;&#x76EE;&#x5F55;12345678MicroZed |----uboot //&#x5B58;&#x653E;uboot&#x6E90;&#x7801; |----linux //&#x5B58;&#x653E;linux&#x6E90;&#x7801; |----filesystem //&#x7528;&#x6765;&#x6784;&#x5EFA;&#x6587;&#x4EF6;&#x7CFB;&#x7EDF; |----devicetree //&#x5B58;&#x653E;&#x8BBE;&#x5907;&#x6811; |----MySD //&#x5B58;&#x653E;&#x8981;&#x8981;&#x62F7;&#x5165;SD&#x5361;&#x7684;&#x6587;&#x4EF6;,uImage,u-boot,devicetree,uramdisk.image.gzwin7share //&#x7528;&#x4E8E;&#x5728;&#x865A;&#x62DF;&#x673A;&#x95F4;&#x4F20;&#x9012;&#x6587;&#x4EF6;tools-arm //&#x5B58;&#x653E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE; &#x4E0B;&#x8F7D;&#x4E0E;&#x914D;&#x7F6E;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x94FE; &#x4E0B;&#x8F7D;&#x5730;&#x5740; http://www.veryarm.com/arm-none-linux-gnueabi-gcc1234567cd /etcvi profile//&#x6DFB;&#x52A0;&#x5982;&#x4E0B;&#x4E24;&#x884C;export PATH=$PATH:&quot;home/&#x7528;&#x6237;/tools-arm/arm-2014.05/bin&quot;;export CROSS_COMPILE=&quot;arm-none-linux-gnueabi-&quot;&#x4FDD;&#x5B58;source /etc/profile //&#x7ACB;&#x5373;&#x751F;&#x6548; &#x4E0B;&#x8F7D;&#x7F16;&#x8BD1;uboot &#x4E0B;&#x8F7D;&#x5730;&#x5740; https://github.com/Xilinx/u-boot-xlnx/releases &#x7248;&#x672C;v2016.2&#x6587;&#x4EF6;&#x89E3;&#x538B; MicroZed/uboot&#x76EE;&#x5F55;&#x4E0B;,&#x7136;&#x540E;&#x8FDB;&#x5165;&#x76EE;&#x5F55;123make distcleanmake zynq_zed_configmake &#x7ED3;&#x679C;&#x5982;&#x4E0B;&#x56FE;&#xFF0C;&#x62F7;&#x8D1D;u-boot&#x5230;MySD&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x95EE;&#x9898;,&#x89E3;&#x51B3;&#x529E;&#x6CD5;12341.&#x7F3A;&#x5C11;opensslapt-get install libssl-dev2.&#x7F3A;&#x5C11;device-tree-compilerapt-get intsall device-tree-compiler &#x4E0B;&#x8F7D;&#x7F16;&#x8BD1;linux &#x4E0B;&#x8F7D;&#x5730;&#x5740; https://github.com/Xilinx/linux-xlnx/releases &#x7248;&#x672C;v2014.2&#x6587;&#x4EF6;&#x89E3;&#x538B; MicroZed/linux&#x76EE;&#x5F55;&#x4E0B;,&#x7136;&#x540E;&#x8FDB;&#x5165;&#x76EE;&#x5F55;123make ARCH=arm distcleanmake ARCH=arm xilinx_zynq_defconfigmake ARCH=arm menuconfig &#x914D;&#x7F6E;RAMDISK,&#x5982;&#x56FE; &#x4FEE;&#x6539;(8) Default number of RAM disks(32768) Default RAM disk size &#x5B8C;&#x6210;&#x540E;&#x4FDD;&#x5B58;,&#x5F00;&#x59CB;&#x7F16;&#x8BD1;1make ARCH=arm uImage LOADADDR=0x00100000 &#x7F16;&#x8BD1;&#x5B8C;&#x6210;&#x7ED3;&#x679C;&#x5982;&#x56FE;,&#x62F7;&#x8D1D;uImage&#x5230;MySD&#x51FA;&#x73B0;&#x4EE5;&#x4E0B;&#x95EE;&#x9898;,&#x89E3;&#x51B3;&#x529E;&#x6CD5;12341. fatal error: curses.h: &#x6CA1;&#x6709;&#x90A3;&#x4E2A;&#x6587;&#x4EF6;&#x6216;&#x76EE;&#x5F55;apt-get install libncurses5-dev2. no mkimage &#x590D;&#x5236;uboot&#x91CC;&#x7684;tools&#x91CC;&#x7684;mkimage&#x5230; /usr/bin &#x5236;&#x4F5C;&#x548C;&#x4FEE;&#x6539;&#x8BBE;&#x5907;&#x6811; &#x8FDB;&#x5165;&#x521A;&#x624D;&#x4E0B;&#x8F7D;&#x7684;linux&#x5185;&#x6838;&#x76EE;&#x5F55; &#x8FDB;&#x5165;&#x5230;&#x4EE5;&#x4E0B;&#x76EE;&#x5F55;123456cp &#x5185;&#x6838;&#x76EE;&#x5F55;/arch/arm/boot/dts//&#x627E;&#x5230;zynq-zed.dtscp ./zynq-zed.dts &#x5185;&#x6838;&#x76EE;&#x5F55;/mv zynq-zed.dts devicetree.dtsvi devicetree.dts//&#x5982;&#x4E0B;&#x56FE; &#x6DFB;&#x52A0; ip=192.168.1.10:192.168.1.1:192.168.1.1:255.255.255.0::eth0:none &#x5982;&#x4E0B;&#x56FE; &#x5728;&#x5185;&#x6838;&#x76EE;&#x5F55;&#x4E0B;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x6307;&#x4EE4;12./scripts/dtc/dtc -O dtb -I dts -o devicetree.dtb devicetree.dts//&#x590D;&#x5236;devicetree.dtb &#x5230;MySD &#x51FA;&#x73B0;&#x9519;&#x8BEF;&#x89E3;&#x51B3;&#x529E;&#x6CD5;:1234567//&#x8FDB;&#x5165;&#x5185;&#x6838;&#x76EE;&#x5F55;&#x6267;&#x884C;&#x5982;&#x4E0B;&#x64CD;&#x4F5C;make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- xilinx_zynq_defconfigmake ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- dtbscd &#x5185;&#x6838;&#x76EE;&#x5F55;/arch/arm/boot/dtscp ./zynq-zed.dtb &#x5185;&#x6838;&#x76EE;&#x5F55;/mv zynq-zed.dtb devicetree.dtb//&#x62F7;&#x8D1D;devicetree.dtb &#x5230;MySD &#x6587;&#x4EF6;&#x7CFB;&#x7EDF;&#x7684;&#x5236;&#x4F5C; &#x4E0B;&#x8F7D;ramdisk http://www.wiki.xilinx.com/Build+and+Modify+a+Rootfs12345678910111213141516//&#x89E3;&#x538B;&#x6587;&#x4EF6;&#x5230; filesystem &#x8FDB;&#x884C;&#x5982;&#x4E0B;&#x64CD;&#x4F5C;mv arm_ramdisk.image.gz ramdisk.image.gzgunzip ramdisk.image.gz //&#x5F97;&#x5230; ramdisk.imagemkdir tmp_mntmkdir tmp_mnt_newmount -o loop ramdisk.image tmp_mnt/dd if=/dev/zero of=ramdisknew.image bs=1024 count=32768 //&#x5236;&#x4F5C;32MB&#x7684;&#x7A7A;&#x955C;&#x50CF;&#x6587;&#x4EF6;mke2fs -F ramdisknew.image -L&#x3000;&quot;ramdisk&quot; -b 1024 -m 0 //&#x8F6C;&#x6362;&#x4E3A;ext2&#x683C;&#x5F0F;tune2fs ramdisknew.image -i 0 //&#x7981;&#x7528;&#x65F6;&#x95F4;&#x68C0;&#x67E5;chmod a+rwx ramdisknew.imagemount -o loop ramdisknew.image tmp_mnt_new/cp -R ./tmp_mnt/* ./tmp_mnt_new/ //&#x5C06;ramdisk&#x7684;&#x5185;&#x5BB9;&#x62F7;&#x8D1D;&#x5230;&#x65B0;ramdisk&#x53BB;umount tmp_mntumount tmp_mnt_newgzip ramdisknew.imagemkimage -A arm -T ramdisk -C gzip -d ramdisknew.image.gz uramdisk.iamge.gz &#x64CD;&#x4F5C;&#x5B8C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#x56FE;,&#x62F7;&#x8D1D;uramdisk.iamge.gz&#x5230;MySD &#x6700;&#x7EC8;MySD&#x5185;&#x5BB9;&#x5982;&#x4E0B; xilinx tools&#x5236;&#x4F5C;BOOT.bin (&#x6765;&#x81EA;&#x4E0A;&#x4E00;&#x7BC7;&#x6587;&#x7AE0;:MicroZed&#x4F7F;&#x7528;&#x8BB0;&#x5F55;) &#x6700;&#x7EC8;&#x6587;&#x4EF6;&#x5982;&#x4E0B;,&#x5C06;&#x8BE5;&#x6587;&#x4EF6;&#x62F7;&#x5165;SD&#x5361;,&#x8FDE;&#x63A5;&#x5F00;&#x53D1;&#x677F;,&#x91CD;&#x65B0;&#x4E0A;&#x7535;,&#x901A;&#x8FC7;putty&#x67E5;&#x770B;&#x3002; &#x642D;&#x5EFA;&#x8F6F;&#x4EF6;&#x8C03;&#x8BD5;&#x73AF;&#x5883; &#x6784;&#x5EFA;&#x5F00;&#x53D1;&#x677F;&#x4E0E;&#x4E3B;&#x673A;&#x95F4;&#x5C40;&#x57DF;&#x7F51;,&#x5982;&#x56FE; &#x6D4B;&#x8BD5;&#x7F51;&#x7EDC;&#x662F;&#x5426;&#x901A;&#x7545; &#x65B0;&#x5EFA;&#x4E00;&#x4E2A;Linux&#x5E94;&#x7528; &#x914D;&#x7F6E;&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5; &#x5F00;&#x59CB;&#x8FDC;&#x7A0B;&#x8C03;&#x8BD5; &#x53D1;&#x73B0;&#x7A0B;&#x5E8F;&#x4E0D;&#x80FD;&#x8FD0;&#x884C;,&#x901A;&#x8FC7;SDK&#x7684;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;&#x67E5;&#x770B;&#x53D1;&#x73B0;&#x7F3A;&#x5C11;&#x5E93;,&#x5982;&#x56FE; &#x7531;&#x4E8E;&#x6CA1;&#x6709;&#x627E;&#x5230;&#x8FD9;&#x4E2A;&#x5E93;&#x6587;&#x4EF6;,&#x6362;&#x4E00;&#x4E2A;&#x4EA4;&#x53C9;&#x7F16;&#x8BD1;&#x5DE5;&#x5177;(&#x521A;&#x624D;&#x7528;&#x6765;&#x7F16;&#x8BD1;&#x5185;&#x6838;&#x7684;),&#x5728;ubuntu&#x4E0A;&#x7F16;&#x5199;helloword &#x5C06;&#x751F;&#x6210;&#x7684;elf&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;u&#x76D8;,u&#x76D8;&#x63D2;&#x5230;&#x5F00;&#x53D1;&#x677F;&#x4E0A;,&#x6302;&#x8F7D;&#x8FD0;&#x884C;&#x3002; Linux&#x73AF;&#x5883;&#x642D;&#x5EFA;&#x5B8C;&#x4E86;,&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;&#x9A71;&#x52A8;&#x7684;&#x7F16;&#x5199;&#x4E86;&#x3002;","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]MicroZed使用记录","slug":"T-MicroZed使用记录","date":"2016-10-07T04:00:23.000Z","updated":"2019-06-06T11:06:25.368Z","comments":true,"path":"2016/10/07/T-MicroZed使用记录/","link":"","permalink":"http://fengjinyuan.github.io/2016/10/07/T-MicroZed使用记录/","excerpt":"","text":"&#x524D;&#x8A00; &#x4E4B;&#x524D;&#x73A9;&#x8FC7;51,Arduino,STM32,ARM7,FPGA(Spartan6),&#x56FD;&#x5E86;&#x62FF;&#x8001;&#x5E08;&#x7684;MicroZed&#x6298;&#x817E;&#x4E86;&#x4E00;&#x756A;&#x89C9;&#x5F97;&#x8FD8;&#x662F;&#x86EE;&#x597D;&#x73A9;&#x7684;&#x3002;&#x4E0B;&#x9762;&#x8BE6;&#x7EC6;&#x8BB0;&#x5F55;&#x6211;&#x7684;&#x64CD;&#x4F5C;&#x8FC7;&#x7A0B;&#x3002; &#x5F00;&#x53D1;&#x73AF;&#x5883; &#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1A;&#x4E3B;&#x673A;Ubuntu16.04 &#x865A;&#x62DF;&#x673A;win7(sp1) PS:IDE&#x5B89;&#x88C5;&#x5728;WIN7IDE&#xFF1A; Vivado 2016.1&#x5176;&#x4ED6;&#x5DE5;&#x5177;: putty &#x51C6;&#x5907;&#x5DE5;&#x4F5C;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x53BB;MicroZed&#x5B98;&#x7F51;&#x4E0B;&#x8F7D;&#x4E00;&#x4E9B;&#x4E1C;&#x897F;,&#x4E3B;&#x8981;&#x662F;&#x5F00;&#x53D1;&#x677F;&#x4FE1;&#x606F;,&#x8FD8;&#x6709;PS&#x90E8;&#x5206;&#x7684;&#x914D;&#x7F6E;&#x4FE1;&#x606F;&#x3002; Vivado&#x76EE;&#x524D;&#x5BF9;&#x7B2C;&#x4E09;&#x65B9;&#x7684;&#x5F00;&#x53D1;&#x677F;&#x652F;&#x6301;&#x8FD8;&#x4E0D;&#x662F;&#x5F88;&#x5B8C;&#x5584;&#x3002;&#x4E0B;&#x56FE;&#x662F;&#x6211;&#x4EEC;&#x9700;&#x8981;&#x4E0B;&#x8F7D;&#x7684;&#x4E24;&#x4E2A;&#x6587;&#x4EF6; &#x89E3;&#x538B;&#x56FE;&#x4E00;&#x7684;&#x7B2C;&#x4E00;&#x4E2A;&#x6587;&#x4EF6;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x56FE;&#x7ED3;&#x679C; &#x6211;&#x4EEC;&#x5C06;&#x89E3;&#x538B;&#x5F97;&#x5230;&#x7684;&#x7ED3;&#x679C;,&#x653E;&#x7F6E;Vivado&#x5B89;&#x88C5;&#x76EE;&#x5F55;&#x4E0B;&#x7684; Vivado/2016.1/data/boards/board_files/ &#x64CD;&#x4F5C;&#x5B8C;&#x5982;&#x56FE;&#x89E3;&#x538B;&#x56FE;&#x4E00;&#x7684;&#x7B2C;&#x4E8C;&#x4E2A;&#x6587;&#x4EF6;&#x5F97;&#x5230;&#x5982;&#x4E0B;&#x56FE;&#x7ED3;&#x679C;&#x627E;&#x4E00;&#x4E2A;&#x78C1;&#x76D8;&#x5728;&#x78C1;&#x76D8;&#x4E0B;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;microzed&#x6587;&#x4EF6;&#x5939;,&#x5728;microzed&#x6587;&#x4EF6;&#x5939;&#x4E0B;&#x5EFA;&#x7ACB;scripts&#x6587;&#x4EF6;&#x5939; ,&#x653E;&#x5165;&#x521A;&#x624D;&#x89E3;&#x538B;&#x5F97;&#x5230;&#x7684;tcl&#x6587;&#x4EF6;,&#x64CD;&#x4F5C;&#x5B8C;&#x7ED3;&#x679C;&#x5982;&#x4E0B;&#x56FE; &#x786C;&#x4EF6;&#x73AF;&#x5883;&#x6784;&#x5EFA;&#x5F00;&#x59CB;&#x5EFA;&#x7ACB;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x9879;&#x76EE;&#x64CD;&#x4F5C;&#x5982;&#x4E0B;&#x56FE; &#x70B9;&#x51FB;&#x5B8C;&#x6210;&#x540E;&#x4E00;&#x4E2A;&#x65B0;&#x7684;&#x9879;&#x76EE;&#x5EFA;&#x7ACB;&#x5B8C;&#x6BD5; &#x914D;&#x7F6E;&#x786C;&#x4EF6;&#x4FE1;&#x606F;&#x64CD;&#x4F5C;&#x5982;&#x4E0B;&#x56FE;&#x5728;&#x5DE6;&#x4FA7;&#x5BFC;&#x822A;&#x680F;&#x53CC;&#x51FB;Create Block Design &#x5F39;&#x51FA;&#x4E0B;&#x56FE;&#x5BF9;&#x8BDD;&#x6846; &#x8F93;&#x5165;&#x8BBE;&#x8BA1;&#x540D;&#x5B57;System&#x73B0;&#x5728;&#x6211;&#x4EEC;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;IP&#x6838; &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x7528;tcl&#x6587;&#x4EF6;&#x6765;&#x914D;&#x7F6E;&#x6211;&#x4EEC;&#x7684;PS &#x64CD;&#x4F5C;&#x5982;&#x56FE;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x5904;&#x8F93;&#x5165; source &#x521A;&#x624D;&#x5B58;&#x653E;&#x7684;tcl&#x6587;&#x4EF6; &#x7136;&#x540E;&#x56DE;&#x8F66;&#x5355;&#x51FB;Run Block Autonation&#x9A8C;&#x8BC1;&#x914D;&#x7F6E; &#x751F;&#x6210;&#x9876;&#x5C42;&#x6587;&#x4EF6;&#x64CD;&#x4F5C;&#x5982;&#x4E0B;&#x53F3;&#x51FB;System &#x5355;&#x51FB; Generate Output Products &#x53F3;&#x51FB;System &#x5355;&#x51FB; Generate HDL Wrapper&#x5728;&#x5DE6;&#x4FA7;&#x5BFC;&#x822A;&#x680F;&#x53CC;&#x51FB; Generate Bitstream&#x5728;File-&gt;Export-&gt;Export Hardware&#x542F;&#x52A8;SDK &#x5230;&#x8FD9;&#x91CC;&#x786C;&#x4EF6;&#x73AF;&#x5883;&#x5C31;&#x914D;&#x7F6E;&#x5B8C;&#x4E86;. &#x8F6F;&#x4EF6;&#x5F00;&#x53D1;&#x65B0;&#x5EFA;&#x5F00;&#x53D1;&#x677F;&#x7684;&#x652F;&#x6301;&#x5305;file-&gt;new-&gt;board support package &#x65B0;&#x5EFA;&#x5E94;&#x7528;file-&gt;new-&gt;Application &#x8FDE;&#x63A5;&#x597D;&#x5F00;&#x53D1;&#x677F;,&#x70B9;&#x51FB;Xilinx tools-&gt;program FPGA &#x914D;&#x7F6E;HelloWord&#x5E94;&#x7528;&#x7684;&#x8FD0;&#x884C;&#x73AF;&#x5883;,&#x6211;&#x4EEC;&#x76F4;&#x63A5;&#x914D;&#x7F6E;Release&#x7248;&#x672C; &#x65B9;&#x4FBF;&#x540E;&#x9762;&#x7684;fsbl&#x6587;&#x4EF6;&#x7684;&#x751F;&#x6210;&#x3002; &#x914D;&#x7F6E;Run Configuration&#x9009;&#x4E2D;&#x5E94;&#x7528;&#x8FD0;&#x884C;,&#x53EF;&#x4EE5;&#x5728;&#x63A7;&#x5236;&#x53F0;&#x770B;&#x5230;&#x5982;&#x4E0B;&#x7ED3;&#x679C; &#x4EE5;&#x4E0A;&#x7684;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x901A;&#x8FC7;xilinx&#x8C03;&#x8BD5;&#x5668;&#x8FD0;&#x884C;&#x7684;&#x3002;&#x786C;&#x4EF6;&#x8DF3;&#x7EBF;&#x8FDE;&#x63A5;&#x5982;&#x4E0B;&#x56FE; &#x901A;&#x8FC7;FSBL&#x5F15;&#x5BFC;&#x8FD0;&#x884C;&#x5E94;&#x7528;file-&gt;new-&gt;Application &#x5EFA;&#x7ACB;FSBL&#x5E94;&#x7528;&#x8BBE;&#x7F6E;Release&#x7248;&#x672C;&#x751F;&#x6210;QSPI&#x7684;boot.mcs&#x6587;&#x4EF6; &#x751F;&#x6210;SD&#x7684;boot.bin&#x6587;&#x4EF6;xilinx tools-&gt;Create boot Image&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6539;&#x53D8;output Format&#x6765;&#x8F93;&#x51FA;.bin .mcs &#x901A;&#x8FC7;&#x8C03;&#x8BD5;&#x5668;&#x6765;&#x70E7;&#x5199;&#x8FDB;qspi,&#x7136;&#x540E;&#x901A;&#x8FC7;qspi&#x542F;&#x52A8;&#x786C;&#x4EF6;&#x8DF3;&#x7EBF;&#x63A5;&#x7EBF;&#x56FE;&#x901A;&#x8FC7;putty&#x8BBE;&#x7F6E;COM&#x6765;&#x67E5;&#x770B;&#x7ED3;&#x679C; &#x901A;&#x8FC7;sd&#x5361;&#x542F;&#x52A8;&#x5C06;boot.bin&#x62F7;&#x8D1D;&#x5230;sd&#x5361;,&#x7136;&#x540E;&#x8BBE;&#x7F6E;&#x786C;&#x4EF6;&#x63A5;&#x7EBF;&#x56FE;&#x5982;&#x4E0B;&#x901A;&#x8FC7;putty&#x8BBE;&#x7F6E;COM&#x6765;&#x67E5;&#x770B;&#x7ED3;&#x679C; &#x5230;&#x8FD9;&#x91CC;&#x6574;&#x4E2A;&#x6D41;&#x7A0B;&#x5C31;&#x5B8C;&#x4E86;,&#x63A5;&#x4E0B;&#x6765;&#x5C31;&#x662F;Linux&#x7684;&#x79FB;&#x690D;&#x4E86;&#x3002;","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]简单物联网组建","slug":"T-简单物联网组建","date":"2016-06-03T15:20:22.000Z","updated":"2019-06-06T12:15:30.704Z","comments":true,"path":"2016/06/03/T-简单物联网组建/","link":"","permalink":"http://fengjinyuan.github.io/2016/06/03/T-简单物联网组建/","excerpt":"","text":"&#x7B80;&#x5355;&#x7684;&#x7269;&#x8054;&#x7F51;&#x7684;&#x7EC4;&#x5EFA;&#x76EE;&#x6807;&#x63CF;&#x8FF0; &#x5BA2;&#x6237;&#x7AEF;(PC,&#x624B;&#x673A;)&#x901A;&#x8FC7;&#x8BBF;&#x95EE;&#x6307;&#x5B9A;&#x7F51;&#x9875;&#x8FDC;&#x7A0B;&#x63A7;&#x5236;&#x8BBE;&#x5907;&#x7684;&#x72B6;&#x6001;(&#x5F00;&#x5173;)&#x3002; &#x6240;&#x9700;&#x8BBE;&#x5907;&#x4E0E;&#x73AF;&#x5883; 1.Arduino UNO+W5100 2.LED 3.&#x4E00;&#x6839;&#x7F51;&#x7EBF; 4.&#x4E2A;&#x4EBA;PC 5.&#x670D;&#x52A1;&#x5668; &#x88AB;&#x63A7;&#x7AEF;&#x7EC4;&#x7F51;1.&#x4E2A;&#x4EBA;PC&#x901A;&#x8FC7;&#x65E0;&#x7EBF;&#x8FDE;&#x63A5;,&#x53EF;&#x8BBF;&#x95EE;&#x5916;&#x7F51;&#x3002;2.&#x5206;&#x4EAB;&#x65E0;&#x7EBF;&#x8FDE;&#x63A5;,&#x4F9B;&#x672C;&#x5730;&#x8FDE;&#x63A5;&#x4F7F;&#x7528;&#x3002;&#x5982;&#x56FE; 3.&#x8BBE;&#x5B9A;&#x4E2A;&#x4EBA;PC&#x7684;IP,&#x5B50;&#x7F51;&#x63A9;&#x7801;,&#x9ED8;&#x8BA4;&#x7F51;&#x5173;(&#x6839;&#x636E;&#x5B9E;&#x9645;&#x60C5;&#x51B5;)&#x3002;&#x5982;&#x56FE; 4.&#x5C06;W5100&#x7528;&#x7F51;&#x7EBF;&#x4E0E;&#x4E2A;&#x4EBA;PC&#x8FDE;&#x63A5;&#x3002;&#x70E7;&#x5199;&#x6D4B;&#x8BD5;&#x7A0B;&#x5E8F;Arduino,&#x8BBE;&#x5B9A;IP&#x4E3A;192.168.137.xxx(&#x81EA;&#x5DF1;&#x5B9A;)&#x3002; 5.&#x6D4B;&#x8BD5;Arduino&#x4E0E;&#x4E2A;&#x4EBA;PC&#x7684;&#x7F51;&#x7EDC;&#x8FDE;&#x63A5;&#x60C5;&#x51B5;&#x3002;&#x5982;&#x56FE; &#x7EC4;&#x7F51;&#x5B8C;&#x6210;# &#x670D;&#x52A1;&#x5668;&#x7AEF;## 1.&#x670D;&#x52A1;&#x5668;&#x73AF;&#x5883;&gt; PHP 5.3&gt; Apache HTTP&#x670D;&#x52A1;&gt; Linux Ubuntu## 2.&#x7F16;&#x5199;&#x670D;&#x52A1;&#x5668;&#x7AEF;&#x5904;&#x7406;&#x7A0B;&#x5E8F;state.txt (&#x8BB0;&#x5F55;&#x8BBE;&#x5907;&#x7684;&#x72B6;&#x6001;)state.php (&#x7528;&#x4E8E;Arduino&#x8BF7;&#x6C42;&#x8BBE;&#x5907;&#x5E94;&#x5904;&#x4E8E;&#x7684;&#x72B6;&#x6001;)1234$myfile = fopen(&quot;state.txt&quot;,&quot;r&quot;) or die (&quot;Unable open file&quot;);$state = fgetc($myfile);echo &quot;&gt;&quot;.$state;fclose($myfile);modifi.php (&#x7528;&#x4E8E;&#x5BA2;&#x6237;&#x7AEF;&#x6539;&#x53D8;&#x8BBE;&#x5907;&#x72B6;&#x6001;)1234$state = $_GET[&apos;state&apos;];$myfile = fopen(&quot;state.txt&quot;,&quot;w&quot;) or die (&quot;Unable open file&quot;);fwrite($myfile,$state);fclose($myfile);index.html (&#x7528;&#x4E8E;&#x5BA2;&#x6237;&#x7AEF;&#x64CD;&#x4F5C;)12345678910111213141516&lt;script src=&quot;./js/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt; $(document).on(&quot;click&quot;,&quot;.button&quot;,function(){ if($(&quot;input[type=&apos;checkbox&apos;]&quot;).is(&apos;:checked&apos;)){ var state = &quot;1&quot;; var url = &quot;../modifi.php&quot;; requestdata={state:state}; $.getJSON(url,requestdata,function(data){}); }else{ var state = &quot;0&quot;; var url = &quot;../modifi.php&quot;; requestdata={state:state}; $.getJSON(url,requestdata,function(data){}); } }); &lt;/script&gt;# &#x8BBE;&#x5907;&#x7AEF;## Arduino &#x7A0B;&#x5E8F;1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980#include &lt;SPI.h&gt;#include &lt;Ethernet.h&gt;byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED};//&#x63A7;&#x5236;&#x5668;&#x7684;MACIPAddress ip(192, 168, 137, 177);//&#x5206;&#x914D;&#x8BBE;&#x5907;IP (PC+&#x8BBE;&#x5907; &#x6784;&#x6210;&#x5C40;&#x57DF;&#x7F51;,&#x9ED8;&#x8BA4;&#x7F51;&#x5173;192.168.137.0 &#x65E0;&#x7EBF;&#x4F5C;&#x4E3A;&#x5916;&#x7F51;&#x6E90;(&#x5C5E;&#x6027; &#x5171;&#x4EAB; &#x672C;&#x5730;&#x8FDE;&#x63A5;)EthernetClient client; //&#x521D;&#x59CB;&#x5316;&#x5BA2;&#x6237;&#x7AEF;//char server[] = &quot;www.fengjinyuan.net&quot;; //&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#x5668;&#x57DF;&#x540D;IPAddress server(121,42,185,217);//&#x8FDC;&#x7A0B;&#x670D;&#x52A1;&#x5668;&#x7684;IPunsigned long FinishConnectionTime = 0;//&#x8FDE;&#x63A5;&#x5B8C;&#x6210;&#x7684;&#x65F6;&#x95F4;&#x6233;(&#x6BEB;&#x79D2;&#x7EA7;)const unsigned long PostingInterval = 10L * 100L; //&#x91CD;&#x65B0;&#x8FDE;&#x63A5;&#x65F6;&#x95F4;&#x95F4;&#x9694;int mark=0;//&#x5F00;&#x5173;void setup() { Serial.begin(9600);//&#x5F00;&#x542F;&#x4E32;&#x53E3; while (!Serial) { ; } delay(1000);//&#x7F51;&#x5361;&#x6A21;&#x5757;&#x521D;&#x59CB;&#x65F6;&#x95F4; Ethernet.begin(mac, ip);//&#x8BBE;&#x5B9A;&#x8BBE;&#x5907;MAC,IP Serial.print(&quot;My IP address: &quot;); Serial.println(Ethernet.localIP());//&#x663E;&#x793A;&#x8BBE;&#x5907;&#x7684;IP&#x5730;&#x5740;&#xFF1B; pinMode(2,OUTPUT);// &#x521D;&#x59CB;&#x5316;IO 2 &#x4F4D;&#x8F93;&#x51FA;}void loop() { Switch(returnState()); if(mark){ digitalWrite(2, HIGH); //delay(1000); }else{ digitalWrite(2, LOW); //delay(1000); } if(millis()-FinishConnectionTime&gt; PostingInterval){ client.stop(); httpRequest(); }}void httpRequest() { Serial.println(&quot;connecting...&quot;); if (client.connect(server, 120)) { //&#x72B6;&#x6001;&#x8FD4;&#x56DE; 1 &#x65F6;&#x8FDE;&#x63A5;&#x6210;&#x529F; Serial.println(&quot;connect successful.&quot;); //&#x53D1;&#x9001;&#x8BF7;&#x6C42; client.println(&quot;GET /state.php HTTP/1.1&quot;); client.println(&quot;Host: www.fengjinyuan.net&quot;); client.println(&quot;User-Agent: Arduino-Ethernet&quot;); //client.println(&quot;Connection: close&quot;); client.println(); FinishConnectionTime = millis();//&#x8BB0;&#x5F55;&#x8BF7;&#x6C42;&#x5B8C;&#x6210;&#x7684;&#x65F6;&#x95F4; } else { Serial.println(&quot;connection failed&quot;);//&#x8FDE;&#x63A5;&#x5931;&#x8D25;&#x7684;&#x72B6;&#x6001; }}char returnState(){ char state; while(client.available()){ char c = client.read(); if(c == &apos;&gt;&apos;){ state = client.read(); Serial.write(state); break; } } return state;}void Switch(char state){ if (state==&apos;1&apos;){ mark = 1; }else if(state == &apos;0&apos;){ mark = 0; }}# &#x6574;&#x4F53;&#x7ED3;&#x6784;&#x56FE; &#x5BA2;&#x6237;&#x7AEF; &#x4E0E; &#x8BBE;&#x5907;&#x7AEF;","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]MinnowBoard-MAX开发环境搭建","slug":"T-MinnowBoard-MAX开发环境搭建","date":"2016-04-23T15:05:52.000Z","updated":"2019-06-06T12:10:06.548Z","comments":true,"path":"2016/04/23/T-MinnowBoard-MAX开发环境搭建/","link":"","permalink":"http://fengjinyuan.github.io/2016/04/23/T-MinnowBoard-MAX开发环境搭建/","excerpt":"","text":"&#x786C;&#x4EF6;&#x9700;&#x6C42;&#x63CF;&#x8FF0; 1.&#x4E00;&#x6839;MicroHDMI&#x8F6C;HDMI&#x7EBF;2.&#x652F;&#x6301;1920*1080,HDMI&#x7684;&#x663E;&#x793A;&#x5668;3.MinnowBoard MAX&#x5F00;&#x53D1;&#x677F;4.usb &#x952E;&#x76D8;5.FAT32&#x683C;&#x5F0F;&#x7684;USB6.&#x8BFB;&#x5361;&#x5668;7.32G SD&#x5361;8.5V 2.5A &#x7535;&#x6E90;&#x9002;&#x914D;&#x5668;9.&#x7F51;&#x7EBF; &#x66F4;&#x65B0;&#x56FA;&#x4EF6;1.&#x4E0B;&#x8F7D;&#x56FA;&#x4EF6;http://firmware.intel.com/projects/minnowboard-max 2.&#x5C06;&#x538B;&#x7F29;&#x5305;&#x89E3;&#x538B;,&#x4EE5;&#x4E0B;&#x6587;&#x4EF6;&#x62F7;&#x8D1D;&#x5230;U&#x76D8;MinnowBoard.MAX.FirmwareUpdateIA32.efiMinnowBoard.MAX.FirmwareUpdateX64.efiMinnowBoard.MAX.I32.090.R01.binMinnowBoard.MAX.X64.090.R01.bin 3.&#x5C06;U&#x76D8;&#x63D2;&#x5165;USB&#x63A5;&#x53E3;,&#x4E0A;&#x7535;&#x8BBE;&#x5907;&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;12fs0:.\\MinnowBoard.MAX.FirmwareUpdateX64.efi MinnowBoard.MAX.I32.090.R01.bin 4.&#x5199;&#x5165;windows10 IoT image &#x5230;SD&#x5361;&#x6587;&#x4EF6;&#x4E0B;&#x8F7D;https://developer.microsoft.com/en-us/windows/iot/downloads &#x53CC;&#x51FB;&#x4E0B;&#x8F7D;&#x7684;ISO&#x6587;&#x4EF6;,&#x5B89;&#x88C5;Windows_10_IoT_Core_Mbm.msi&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x4F1A;&#x5728;C:\\Program Files (x86)\\Microsoft IoT\\FFU\\MinnowBoardMax&#x6709;&#x4E00;&#x4E2A;flash.ffu&#x6587;&#x4EF6;&#x63D2;&#x5165;&#x8BFB;&#x5361;&#x5668;&#x5728;pc&#x4E0A;&#x8FD0;&#x884C;WindowsIoTImageHelper &#x9009;&#x7740;&#x70E7;&#x5199;&#x6587;&#x4EF6;&#x4E3A;C:\\Program Files (x86)\\Microsoft IoT\\FFU\\MinnowBoardMax\\flash.ffu 5.&#x914D;&#x7F6E;bios-&gt;1.Device Manager -&gt; System Setup -&gt; South Cluster Configuration -&gt; LPSS &amp; SCC Configuration&#x8BBE;&#x7F6E;&#x201D;LPSS PWM #1 Support&#x201D;&#x4E3A;Disable&#x8BBE;&#x7F6E;&#x201D;LPSS PWM #2 Support&#x201D;&#x4E3A;Disable -&gt;2.Boot Maintenance Manager-&gt; Boot Options &gt; Change Boot Order&#x7528;&#x201D;shift&#x201D; + &#x201C;+&#x201D;&#x79FB;&#x52A8;Misc Device&#x4E3A;&#x7B2C;&#x4E00;&#x4E2A; 6.&#x91CD;&#x542F;&#x5F00;&#x53D1;&#x677F; 7.Powershell connect to MinnowBoard MAX -&gt;1.&#x4EE5;&#x7BA1;&#x7406;&#x5458;&#x8EAB;&#x4EFD;&#x8FD0;&#x884C;Powershell&#x6267;&#x884C;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;123net start WinRM //&#x5F00;&#x542F;remote management &#x670D;&#x52A1;Set-Item WSMan:\\localhost\\Client\\TrustedHosts -Value &lt;&#x8BBE;&#x5907;IP&#x6216;&#x8005;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt;Enter-PSSession -ComputerName &lt;&#x8BBE;&#x5907;IP&#x6216;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt; -Credential &lt;&#x8BBE;&#x5907;IP&#x6216;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt;\\Administrator&#x9ED8;&#x8BA4;&#x79D8;&#x5BC6;&#x4E3A;p@ssw0rd 123456789net user Administrator [new-password]//&#x66F4;&#x6539;Administra&#x5BC6;&#x7801;setcomputername [new-name]//&#x66F4;&#x6539;&#x8BBE;&#x5907;&#x540D;&#x5B57;shutdown /r /t 0 //&#x91CD;&#x542F;&#x751F;&#x6548;&#x91CD;&#x542F;&#x540E;&#xFF0C;&#x91CD;&#x65B0;&#x5728;PC&#x4E0A;&#x8FDB;&#x5165;PowershellSet-Item WSMan:\\localhost\\Client\\TrustedHosts -Value &lt;&#x66F4;&#x6539;&#x540E;&#x7684;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt;Enter-PSSession -ComputerName &lt;&#x66F4;&#x6539;&#x540E;&#x7684;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt; -Credential &lt;&#x66F4;&#x6539;&#x540E;&#x7684;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt;\\Administrator//&#x8F93;&#x5165;&#x66F4;&#x6539;&#x540E;&#x7684;&#x5BC6;&#x7801;//&#x4EE5;&#x540E;&#x7528;powershell &#x8FDE;&#x63A5; &#x5F00;&#x53D1;&#x677F; &#x53EA;&#x9700;&#x8F93;&#x5165;Enter-PSSession -ComputerName &lt;&#x66F4;&#x6539;&#x540E;&#x7684;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt; -Credential &lt;&#x66F4;&#x6539;&#x540E;&#x7684;&#x8BBE;&#x5907;&#x540D;&#x5B57;&gt;\\Administrator7.ssh connect to MinnowBoard MAX-&gt;1.&#x4F7F;&#x7528;putty &#x8FDE;&#x63A5;&#x5F00;&#x53D1;&#x677F;&#x4F7F;&#x7528;&#x8BBE;&#x5907;IP,&#x8FDE;&#x63A5;&#x7AEF;&#x53E3;&#x53F7;&#x4E3A;22&#x767B;&#x5F55;&#x540D;&#x4E3A;:Administrator&#x521D;&#x59CB;&#x5BC6;&#x7801;&#xFF1A;p@ssw0rd&#x767B;&#x5F55;&#x8FDB;&#x53BB;&#x540E;&#x66F4;&#x6539;&#x5BC6;&#x7801;:net user Administrator [new-password]&#x8BBE;&#x7F6E;&#x8BBE;&#x5907;&#x540D;&#x5B57;:setcomputername [new-name]&#x91CD;&#x542F;&#x751F;&#x6548;:shutdown /r /t 0","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]内存分页管理-EPOS","slug":"T-EPOS内存分页管理","date":"2016-04-13T15:12:52.000Z","updated":"2019-06-06T11:53:37.378Z","comments":true,"path":"2016/04/13/T-EPOS内存分页管理/","link":"","permalink":"http://fengjinyuan.github.io/2016/04/13/T-EPOS内存分页管理/","excerpt":"","text":"IA-321.&#x5730;&#x5740;&#x7ED3;&#x6784; &#x56FE;&#x4E2D;&#x7684;PDE(Page Directory Entry)&#x4E2D;Page&#x2014;Table Base Address&#x4E3A;&#x5C0F;&#x9875;&#x8868;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;.PDE&#x7684;&#x524D;20&#x4F4D;&#x7528;&#x6765;&#x8868;&#x793A;&#x5C0F;&#x9875;&#x8868;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;,&#x540E;12&#x4F4D;&#x7528;&#x6765;&#x7BA1;&#x7406;&#x9875;&#x8868;&#x9879;,&#x5C0F;&#x9875;&#x8868;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x8DE8;&#x5EA6;4KBytes&#x3002;&#x5C0F;&#x9875;&#x8868;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x4E3A;4KBytes(2^12)&#x7684;&#x6574;&#x500D;&#x6570;,&#x4E00;&#x5F20;PDE&#x6709;1024&#x4E2A;&#x9875;&#x8868;&#x9879;,&#x4E00;&#x5F20;PDE&#x5927;&#x5C0F;4KBytes&#x3002; &#x56FE;&#x4E2D;&#x7684;PTE(Page Table Entry)&#x4E2D;Page Base Address&#x4E3A;&#x7269;&#x7406;&#x5730;&#x5740;.PTE&#x7684;&#x524D;20&#x4F4D;&#x7528;&#x6765;&#x8868;&#x793A;&#x7269;&#x7406;&#x5730;&#x5740;,&#x540E;12&#x4F4D;&#x7528;&#x6765;&#x7BA1;&#x7406;&#x9875;&#x8868;&#x9879;,&#x7269;&#x7406;&#x5730;&#x5740;&#x8DE8;&#x5EA6;4KBytes&#x3002;&#x7269;&#x7406;&#x5730;&#x5740;&#x4E3A;4KBytes(2^12)&#x7684;&#x6574;&#x500D;&#x6570;,&#x4E00;&#x5F20;&#x5C0F;&#x9875;&#x8868;&#x6709;1024&#x4E2A;&#x9875;&#x8868;&#x9879;,&#x53EF;&#x4EE5;&#x8868;&#x793A;4MBytes&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x3002;&#x603B;&#x5171;&#x6709;1024&#x4E2A;&#x5C0F;&#x9875;&#x8868;,&#x5219;&#x53EF;&#x4EE5;&#x8868;&#x793A;4GBytes&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#x3002; &#x7528;4Bytes&#x6765;&#x8868;&#x793A;&#x865A;&#x62DF;&#x5730;&#x5740;,[31,22]&#x5171;&#x5341;&#x4F4D;,&#x53EF;&#x4EE5;&#x7D22;&#x5F15;1024&#x9879;PDE,[21,12]&#x5171;&#x5341;&#x4F4D;,&#x53EF;&#x4EE5;&#x7D22;&#x5F15;1024&#x9879;PTE&#xFF0C;[11,0]&#x5171;12&#x4F4D;,&#x53EF;&#x4EE5;&#x5728;&#x504F;&#x79FB;4KBytes&#x7684;&#x7A7A;&#x95F4;&#x5927;&#x5C0F;&#x3002; 2.EPOS&#x4E2D;&#x5206;&#x9875;&#x7684;&#x521D;&#x59CB;&#x5316;&#x6E90;&#x7801;&#x5206;&#x6790;&#x3002; &#x64CD;&#x4F5C;&#x4E00;&#xFF1A;pgdir&#x91CC;&#x5B58;&#x653E;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;,&#x9875;&#x8868;&#x76EE;&#x5F55;&#x7A7A;&#x95F4;&#x5927;&#x5C0F;4KBytes&#x3002;&#x64CD;&#x4F5C;&#x4E00;&#x5B8C;&#x6210;&#x540E;&#x5982;&#x56FE; &#x64CD;&#x4F5C;&#x4E8C;&#x5B8C;&#x6210;&#x540E;&#x5982;&#x56FE; &#x64CD;&#x4F5C;&#x4E09;&#x5B8C;&#x6210;&#x540E;&#x5982;&#x56FE; 123pte=(uint32_t *)(PAGE_TRUNCATE(pgdir[0])); //&#x4ECE;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x53D6;&#x51FA;&#x7B2C;&#x4E00;&#x9879; for(i = 0; i &lt; (uint32_t)(pgdir); i+=PAGE_SIZE) pte[i&gt;&gt;PAGE_SHIFT]=(i)|PTE_V|PTE_W; //&#x7B2C;&#x4E00;&#x5F20;&#x5C0F;&#x9875;&#x8868;&#x7684;&#x7B2C;&#x4E00;&#x9879;&#x5B58;&#x653E;&#x7269;&#x7406;&#x5730;&#x5740;0,4KByte&#x589E;&#x957F;,&#x7B49;&#x4E8E;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x4E3A;&#x6B62;&#x3002; &#x64CD;&#x4F5C;&#x56DB;&#x5B8C;&#x6210;&#x540E;&#x5982;&#x56FE; 12pgdir[(KERNBASE&gt;&gt;PGDR_SHIFT)-1]=(uint32_t)(pgdir)|PTE_V|PTE_W;//pgdir[767]=(uint32_t)(pgdir)|PTE_V|PTE_W; &#x4F7F;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x9879;767&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;(&#x524D;20&#x4F4D;)&#x6307;&#x5411;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x9996;&#x5730;&#x5740;::&#x524D;&#x63D0;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x9996;&#x5730;&#x5740;&#x6EE1;&#x8DB3;4Kbyte&#x5185;&#x5B58;&#x5BF9;&#x9F50;&#x4EE5;&#x524D;&#x901A;&#x8FC7;&#x7269;&#x7406;&#x5730;&#x5740;&#x8BBF;&#x95EE;&#x9875;&#x8868;&#x76EE;&#x5F55;&#xFF0C;&#x5C0F;&#x9875;&#x8868;&#x3002;&#x73B0;&#x5728;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;(767.0.0)&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x8BBF;&#x95EE;&#x7B2C;&#x4E00;&#x5F20;&#x5C0F;&#x9875;&#x8868;(767.767.0)&#x7684;&#x865A;&#x62DF;&#x5730;&#x5740;&#x8BBF;&#x95EE;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x3002;1&#xFF1A;(&#x9875;&#x8868;&#x76EE;&#x5F55;)&#x5C0F;&#x9875;&#x8868;&#x7269;&#x7406;&#x5730;&#x5740;-&gt;(&#x5C0F;&#x9875;&#x8868;)&#x7269;&#x7406;&#x5730;&#x5740;-&gt;&#x7269;&#x7406;&#x5730;&#x5740;+offset2&#xFF1A;(&#x9875;&#x8868;&#x76EE;&#x5F55;)&#x9875;&#x8868;&#x76EE;&#x5F55;&#x5730;&#x5740;-&gt;(&#x9875;&#x8868;&#x76EE;&#x5F55;)&#x5C0F;&#x9875;&#x8868;&#x7269;&#x7406;&#x5730;&#x5740;-&gt;&#x5C0F;&#x9875;&#x8868;&#x7269;&#x7406;&#x5730;&#x5740;+offset3:(&#x9875;&#x8868;&#x76EE;&#x5F55;)&#x9875;&#x8868;&#x76EE;&#x5F55;&#x5730;&#x5740;-&gt;(&#x9875;&#x8868;&#x76EE;&#x5F55;)&#x9875;&#x8868;&#x76EE;&#x5F55;&#x5730;&#x5740;-&gt;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x5730;&#x5740;+offset &#x5C06;&#x9875;&#x8868;&#x76EE;&#x5F55;&#x7684;&#x7269;&#x7406;&#x5730;&#x5740;&#x7ED9;&#x63A7;&#x5236;&#x5668;3&#x5C06;&#x63A7;&#x5236;&#x5668;1&#x7684;&#x9996;&#x4F4D;&#x7F6E;1&#x6253;&#x5F00;&#x5206;&#x9875;","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]内联汇编学习","slug":"T-内联汇编学习","date":"2016-03-29T11:24:27.000Z","updated":"2019-06-06T11:47:29.765Z","comments":true,"path":"2016/03/29/T-内联汇编学习/","link":"","permalink":"http://fengjinyuan.github.io/2016/03/29/T-内联汇编学习/","excerpt":"","text":"&#x95EE;&#x9898;&#x63CF;&#x8FF0; &#x521D;&#x59CB;&#x5316;&#x6307;&#x9488;p,&#x6307;&#x5411;&#x201D;hello&#x201D;&#x5B57;&#x7B26;&#x4E32;,&#x62F7;&#x8D1D;&#x6307;&#x9488;p,&#x4F7F;t&#x4E5F;&#x6307;&#x5411;&#x201D;hello&#x201D;&#x5B57;&#x7B26;&#x4E32;,p=t &#x5185;&#x5BB9;:(&#x5B57;&#x7B26;&#x4E32;&#x9996;&#x5730;&#x5740;),&#x63A7;&#x5236;&#x6307;&#x9488;t,&#x4F7F;&#x5176;&#x7528;hello&#x4E2D;&#x7684;e &#x66FF;&#x6362;temp&#x7684;&#x5185;&#x5BB9;,&#x66FF;&#x6362;temp2&#x7684;&#x5185;&#x5BB9;&#x3002; &#x4EE3;&#x7801;&#x5982;&#x4E0B; c&#x4EE3;&#x7801; &#x6C47;&#x7F16;&#x4EE3;&#x7801; &#x5F88;&#x660E;&#x663E;,&#x64CD;&#x4F5C;&#x4E8C;&#x662F;&#x6709;&#x9519;&#x8BEF;&#x7684;,&#x4F46;&#x662F;&#x8BA1;&#x7B97;&#x673A;&#x5C31;&#x662F;&#x8FD9;&#x4E48;&#x795E;&#x5947;,&#x6211;&#x4EEC;&#x6765;&#x770B;&#x770B;&#x7ED3;&#x679C;&#x3002;(&#x7406;&#x8BBA;&#x4E0A; &#x64CD;&#x4F5C;&#x4E00;&#x6B63;&#x786E;,&#x64CD;&#x4F5C;&#x4E8C;&#x9519;&#x8BEF;) &#x8FD9;&#x662F;&#x4E3A;&#x4EC0;&#x4E48; &#xFF1F;&#xFF1F;&#xFF1F; &#x5206;&#x6790;&#x8FC7;&#x7A0B;&#x5982;&#x4E0B;,&#x9996;&#x5148;&#x5206;&#x6790;&#x64CD;&#x4F5C;&#x4E00; 1234(%esp+52)-&gt;&gt;%eax-&gt;&gt;%ebx%ebx++(%ebx)-&gt;&gt;%cl-&gt;&gt;(%esp+59)[temp] &#x6267;&#x884C;&#x524D;&#x5BC4;&#x5B58;&#x5668;&#x72B6;&#x6001; &#x6267;&#x884C;&#x540E;&#x5BC4;&#x5B58;&#x5668;&#x72B6;&#x6001; 123&#x521D;&#x59CB;&#x65F6;%eax=0x405064,%ebx=0x405064&#x6267;&#x884C;&#x5B8C;%ebx++ %ebx=0x405065&#x6267;&#x884C;&#x5B8C;(%ebx)-&gt;&gt;%cl %ecx=0x65 &#x7EE7;&#x7EED;&#x5411;&#x4E0B;&#x5206;&#x6790; 12345652(%esp+52)-&gt;&gt;%eax;%eax++;%eax-&gt;&gt;(%esp+43)` &#x6267;&#x884C;&#x524D;&#x5BC4;&#x5B58;&#x5668;&#x72B6;&#x6001; &#x6267;&#x884C;&#x540E;&#x5BC4;&#x5B58;&#x5668;&#x72B6;&#x6001; 123&#x6267;&#x884C;&#x5B8C; %eax=0x405065(%esp+43)&#x7684;&#x5185;&#x5BB9;0x405065 &#x7EE7;&#x7EED;&#x5206;&#x6790;,&#x6211;&#x4EEC;&#x770B;&#x770B;printf&#x6253;&#x5370;&#x524D;&#x7684;&#x51C6;&#x5907; 12345(%esp+43)=0x405065&#x5C0F;&#x7AEF;&#x5BF9;&#x9F50;,&#x6267;&#x884C;&#x5B8C;movb 43(%esp),%al&#x540E;%al=0x65 &#x2019;e&#x2019; movsbl %al,%edx &#x5E26;&#x7B26;&#x53F7;&#x4F4D;&#x6269;&#x5C55;(%esp+52)=&apos;0x65&apos;&#x5230;&#x8FD9;&#x91CC;,&#x6211;&#x4EEC;&#x5C31;&#x5E94;&#x8BE5;&#x770B;&#x5230;&#x51FA;&#x9519;&#x7684;&#x539F;&#x56E0;&#x4E86;.","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]MongoDB简记","slug":"T-MongoDB简记","date":"2016-03-06T13:01:31.000Z","updated":"2019-06-06T10:51:15.849Z","comments":true,"path":"2016/03/06/T-MongoDB简记/","link":"","permalink":"http://fengjinyuan.github.io/2016/03/06/T-MongoDB简记/","excerpt":"","text":"1.windows &#x5B89;&#x88C5;MongoDB@1&#x4E0B;&#x8F7D;&#x5730;&#x5740;http://www.mongodb.org/downloads&#x5B89;&#x88C5;&#x5230;&#x6307;&#x5B9A;&#x76EE;&#x5F55;@2&#x521B;&#x5EFA;&#x6570;&#x636E;&#x5E93;db&#x76EE;&#x5F55;&#x8FDB;&#x5165;cmd &#x9009;&#x7740;&#x4EFB;&#x610F;&#x6839;&#x76EE;&#x5F55; ,&#x5982;F:\\12345F:\\&gt;mkdir dataF:\\&gt;cd dataF:\\data&gt;mkdir dbF:\\data&gt;cd dbF:\\data\\db&gt; @3.&#x5F00;&#x542F;mongodb&#x670D;&#x52A1;&#x8FDB;&#x5165;bin&#x76EE;&#x5F55;&#x4E0B;1mongod --dbpath F:/data/db @4.&#x8FDB;&#x5165;mongodb shell&#x8FDB;&#x5165;bin&#x76EE;&#x5F55;&#x4E0B;1mongo 2.Linux &#x5B89;&#x88C5;MongoDB@root&#x6743;&#x9650;&#x4E0B;12345cd /optcurl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.0.6.tgztar -xvf mongodb-linux-x86_64-3.0.6.tgzmv mongodb-linux-x86_64-3.0.6/ /usr/local/mongodbexport PATH=/usr/local/mongodb/bin:$PATH @&#x5EFA;&#x7ACB;db&#x76EE;&#x5F55;1234mkdir datacd datamkdir dbcd db @&#x5F00;&#x542F;mongodb&#x670D;&#x52A1;1mongod --dbpath=/data/db @&#x8FDB;&#x5165;mongodb shell1mongo &#x64CD;&#x4F5C;&#x8BF4;&#x660E;(&#x5728;mongodb shell&#x4E0B;)@1&#x589E;db.your_collection_name.insert(document&lt;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x5143;&#x7EC4;&gt;);db.your_collection_name(&#x8868;).save(document&lt;&#x5173;&#x7CFB;&#x578B;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x7684;&#x5143;&#x7EC4;&gt;); @2&#x5220;db.your_collection_name.remove({});&#x5220;&#x9664;&#x6240;&#x6709;db.your_collection_name.remove({condition},{justOne:true}); @3&#x6539;db.your_collection_name.update({key:value},{$set:{key:value}},{multi:true})db.your_collection_name.save(document) @4&#x67E5;db.your_collection_name.find({key1:value1, key2:value2}).pretty() ANDdb.your_collection_name.find({$or:[{key:value},{key:value}]}).pretty() ORdb.your_collection_name.find({key: {$gt:vlaue}, $or: [{key: value},{key:value}]}).pretty() AND ORdb.your_collection_name.find({key : {$lt :value, $gt : value2}}) key &lt; vlaue AND key &gt; value2&#x5907;&#x6CE8;db.createCollection(&#x201C;your_collection_name&#x201D;, {capped:true, size:100000});limit(num) &#x9650;&#x5B9A;&#x67E5;&#x8BE2;&#x6570;&#x91CF;skip(num) &#x8DF3;&#x8FC7;&#x6307;&#x5B9A;&#x6570;&#x91CF;&#x7684;&#x6570;&#x636E;sort&#xFF08;&#x6392;&#x5E8F;&#xFF09;db.COLLECTION_NAME.find().sort({KEY:1}) 1&#x5347;&#x5E8F; -1&#x964D;&#x5E8F;&#x7D22;&#x5F15;db.your_collection_name.ensureIndex({&#x201C;title&#x201D;:1}) 1&#x5347;&#x5E8F;&#x521B;&#x5EFA;&#x7D22;&#x5F15; -1&#x964D;&#x5E8F;&#x521B;&#x5EFA;&#x7D22;&#x5F15;db.your_collection_name.ensureIndex({&#x201C;title&#x201D;:1,&#x201D;description&#x201D;:-1}) &#x590D;&#x5408;&#x7D22;&#x5F15;mongodump -h dbhost -d dbname -o dbdirectory &#x5907;&#x4EFD;mongorestore -h dbhost -d dbname &#x2013;directoryperdb dbdirectory &#x6062;&#x590D; Linux+php12sudo pecl install mongophp.ini=&gt;extension=mongo.so &#x7CFB;&#x7EDF;&#x8BF4;&#x660E;&#xFF1A;Ubuntu 14.04 64","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]通用异步接受器UART","slug":"T-通用异步接受器UART","date":"2016-03-03T12:52:46.000Z","updated":"2019-06-06T11:13:29.107Z","comments":true,"path":"2016/03/03/T-通用异步接受器UART/","link":"","permalink":"http://fengjinyuan.github.io/2016/03/03/T-通用异步接受器UART/","excerpt":"","text":"&#x4E00;&#x3001;UART&#x539F;&#x7406;&#x8BF4;&#x660E;1.&#x53D1;&#x9001;&#x6570;&#x636E;:cpu&#x5E76;&#x884C;&#x6570;&#x636E;&#x5199;&#x5165;UART,UART&#x6309;&#x7167;&#x4E00;&#x5B9A;&#x683C;&#x5F0F;&#x5728;&#x7535;&#x7EBF;&#x4E0A;&#x4E32;&#x884C;&#x53D1;&#x9001; 2.&#x63A5;&#x53D7;&#x6570;&#x636E;:UART&#x68C0;&#x6D4B;&#x7535;&#x7EBF;&#x7684;&#x4FE1;&#x53F7;,&#x4E32;&#x884C;&#x6536;&#x96C6;&#x5230;&#x7F13;&#x51B2;&#x533A;,CPU&#x4ECE;&#x7F13;&#x51B2;&#x533A;&#x8BFB;&#x6570;&#x636E; &#x6570;&#x636E;&#x4F20;&#x8F93;&#x6D41;&#x7A0B;:1.&#x5F85;&#x547D;&#x65F6;,&#x6570;&#x636E;&#x7EBF;&#x5904;&#x4E8E;&#x7A7A;&#x95F2;&#x72B6;&#x6001;(&#x9AD8;&#x7535;&#x5E73;);2.&#x53D1;&#x9001;&#x6570;&#x636E;&#x65F6;,TXD &#x72B6;&#x6001;&#x4ECE;&#x9AD8;&#x7535;&#x5E73;&#x53D8;&#x4E3A;&#x4F4E;&#x7535;&#x5E73;&#x7EF4;&#x6301;1bit&#x7684;&#x65F6;&#x95F4;(&#x5F00;&#x59CB;&#x4F4D;);3.&#x53D1;&#x9001;&#x4E00;&#x5E27;&#x6570;&#x636E;&#x53EF;&#x4EE5;(5,6,7,8&#x4F4D;),&#x4F4E;&#x4F4D;&#x5148;&#x53D1;&#x9001;;4.&#x4F7F;&#x7528;&#x6821;&#x9A8C;&#x529F;&#x80FD;,&#x6570;&#x636E;&#x4F4D;&#x4F20;&#x8F93;&#x7ED3;&#x675F;&#x65F6;,&#x53D1;&#x9001;&#x4E00;&#x4E2A;&#x6821;&#x9A8C;&#x4F4D;;5.&#x6700;&#x540E;&#x53D1;&#x9001;&#x505C;&#x6B62;&#x4F4D;,&#x505C;&#x6B62;&#x4F4D;&#x957F;&#x5EA6;:1,1.5,2bit &#x4E8C;&#x3001;s3c2440 uart &#x4E09;&#x3001;s3c2440 UART&#x4F7F;&#x7528;&#x4F7F;&#x7528;UART&#x4E4B;&#x524D;&#x9700;&#x8981;&#x8BBE;&#x7F6E;&#x6CE2;&#x7279;&#x7387;(1/&#x6BCF;&#x4F4D;&#x5360;&#x636E;&#x65F6;&#x95F4;),&#x4F20;&#x8F93;&#x683C;&#x5F0F;(&#x6570;&#x636E;&#x4F4D;,&#x6821;&#x9A8C;&#x4F4D;,&#x505C;&#x6B62;&#x4F4D;)@1.&#x8BBE;&#x7F6E;&#x901A;&#x9053;&#x7BA1;&#x811A;&#x4E3A;UART&#x529F;&#x80FD;:uart &#x901A;&#x9053;0:GPHCON-&gt;GPH2(TXD0),GPH3(RXD0) @2.&#x8BBE;&#x7F6E;&#x6CE2;&#x7279;&#x7387;:UBRDIVn n(0-2) s3c2440 uart&#x65F6;&#x949F;&#x6E90;:PCLK,UEXTCLK,PCLK/n1.&#x65F6;&#x949F;&#x6E90;&#x9891;&#x7387;2.&#x7ED9;&#x5B9A;&#x6CE2;&#x7279;&#x7387;UBRDIVn=(int)(UART clock/(buad rate*16)-1) @3.&#x8BBE;&#x7F6E;&#x4F20;&#x8F93;&#x683C;&#x5F0F;:ULCONn n(0-2)[1:0]&#x6570;&#x636E;&#x4F4D;&#x5BBD;&#x5EA6;:00 5&#x4F4D; 01 6&#x4F4D; 10 7&#x4F4D; 11 8&#x4F4D;[2] 0:&#x4E00;&#x5E27;&#x4E2D;&#x4E00;&#x4E2A;&#x505C;&#x6B62;&#x4F4D; 1:&#x4E00;&#x5E27;&#x4E2D;&#x4E8C;&#x4E2A;&#x505C;&#x6B62;&#x4F4D;[5:3] 00:&#x5947;&#x6821;&#x9A8C; 01:&#x5076;&#x6821;&#x9A8C; 10:1&#x6821;&#x9A8C; 11:0&#x6821;&#x9A8C;[6] 0:&#x6B63;&#x5E38;&#x6A21;&#x5F0F; 1:&#x7EA2;&#x5916;&#x6A21;&#x5F0F; @4.&#x9009;&#x62E9;&#x65F6;&#x949F;&#x6E90;&#xFF0C;&#x4E2D;&#x65AD;&#x65B9;&#x5F0F;:UCONn n(0-2)[1:0] &#x63A5;&#x53D7;&#x6A21;&#x5F0F; 00:&#x7981;&#x6B62;&#x63A5;&#x53D7;&#x6570;&#x636E; 01:&#x4E2D;&#x65AD;&#x65B9;&#x5F0F;&#x6216;&#x67E5;&#x8BE2;&#x65B9;&#x5F0F; 10:DMA0/3 &#x8BF7;&#x6C42; 11:DMA1 &#x8BF7;&#x6C42;[3:2] &#x53D1;&#x9001;&#x6A21;&#x5F0F; &#x540C;&#x4E0A;[4] &#x201C;break&#x201D; &#x4FE1;&#x53F7; 0:&#x6B63;&#x5E38;&#x6A21;&#x5F0F; 1:&#x53D1;&#x51FA;&#x2019;break&#x2019;&#x4FE1;&#x53F7;[5] &#x81EA;&#x73AF;&#x6A21;&#x5F0F; 0:&#x6B63;&#x5E38;&#x6A21;&#x5F0F; 1:&#x81EA;&#x73AF;&#x6A21;&#x5F0F;[6] &#x9519;&#x8BEF;&#x5BFC;&#x81F4;&#x7684;&#x4E2D;&#x65AD;&#x4F7F;&#x80FD; 0:&#x7981;&#x6B62;&#x9519;&#x8BEF;&#x4E2D;&#x65AD; 1:&#x4F7F;&#x80FD;&#x9519;&#x8BEF;&#x4E2D;&#x65AD;[7] &#x63A5;&#x53D7;&#x8D85;&#x65F6;&#x4E2D;&#x65AD; &#x5F53;&#x4F7F;&#x7528;FIFO 0:&#x7981;&#x6B62;&#x8D85;&#x65F6;&#x4E2D;&#x65AD; 1:&#x4F7F;&#x80FD;&#x8D85;&#x65F6;&#x4E2D;&#x65AD;[8] &#x63A5;&#x53D7;&#x4E2D;&#x65AD;&#x65B9;&#x5F0F; NOT FIFO &#x63A5;&#x53D7;&#x4E00;&#x4E2A;&#x6570;&#x636E;(&#x4E2D;&#x65AD;) FIFO &#x6570;&#x636E;&#x8FBE;&#x5230;RxFIFO&#x9608;&#x503C;(&#x4E2D;&#x65AD;) 0:&#x8109;&#x51B2; 1:&#x7535;&#x5E73;[9] &#x53D1;&#x9001;&#x4E2D;&#x65AD;&#x65B9;&#x5F0F; NOT FIFO &#x53D1;&#x9001;&#x7F13;&#x51B2;&#x533A;&#x4E3A;&#x7A7A;(&#x4E2D;&#x65AD;) FIFO &#x6570;&#x636E;&#x8FBE;&#x5230;TxFIFO&#x9608;&#x503C;(&#x4E2D;&#x65AD;) 0:&#x8109;&#x51B2; 1:&#x7535;&#x5E73;[11:10] &#x65F6;&#x949F;&#x9009;&#x62E9; 00/10 PCLK 01:UEXTCLK 11:FCLK/n[15:12] FCLK&#x5206;&#x9891;&#x7CFB;&#x6570; 1. UCON2[15] 0:&#x7981;&#x6B62;FCLK/n 1:&#x4F7F;&#x80FD;FCLK/n n(7-21) UART&#x65F6;&#x949F;=FCLK/(divider+6) divider&#x4E3A;UCON0[15:12]&#x503C; n(22-36) UART&#x65F6;&#x949F;=FCLK/(divider+21) divider&#x4E3A;UCON1[15:12]&#x503C; n(37-43) UART&#x65F6;&#x949F;=FCLK/(divider+36) divider&#x4E3A;UCON2[14:12]&#x503C; @5 UFCONn:&#x8BBE;&#x7F6E;&#x662F;&#x5426;&#x4F7F;&#x7528;FIFO &#x8FD9;&#x662F;FIFO&#x9608;&#x503C;@6 UFSATAn:&#x68C0;&#x6D4B;FIFO&#x662F;&#x5426;&#x5DF2;&#x6EE1;,&#x591A;&#x5C11;&#x6570;&#x636E;@7 UMCONn:&#x6D41;&#x91CF;&#x63A7;&#x5236;@8 UMSTATn:&#x6D41;&#x91CF;&#x72B6;&#x6001;@9 UTRSTATn:&#x68C0;&#x6D4B;&#x6570;&#x636E;&#x662F;&#x5426;&#x53D1;&#x9001;&#x5B8C;&#x6BD5;&#xFF0C;&#x662F;&#x5426;&#x63A5;&#x53D7;&#x5230;&#x6570;&#x636E;[0] &#x63A5;&#x53D7;&#x6570;&#x636E;&#x7F6E;1[1] &#x53D1;&#x9001;&#x7F13;&#x51B2;&#x533A;&#x6CA1;&#x6709;&#x6570;&#x636E;&#x7F6E;1[2] &#x53D1;&#x9001;&#x7F13;&#x51B2;&#x533A;&#x6CA1;&#x6709;&#x6570;&#x636E;,&#x6700;&#x540E;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x5DF2;&#x53D1;&#x9001; &#x7F6E;1 @10UERSTATn &#x8868;&#x793A;&#x9519;&#x8BEF;&#x7C7B;&#x578B;@11UTXHn &#x5C06;&#x6570;&#x636E;&#x4FDD;&#x5B58;&#x5230;&#x7F13;&#x51B2;&#x533A;,&#x81EA;&#x52A8;&#x53D1;&#x9001;@12URXHn CPU&#x8BFB;&#x53D6;&#x4F20;&#x6765;&#x7684;&#x6570;&#x636E;&#x6E90;&#x7801;head.S1234567891011121314151617.extern main.text.global _start_start:Reset: ldr sp,=4096 @&#x8BBE;&#x7F6E;&#x6808;&#x9876;&#x6307;&#x9488; bl disable_watch_dog @&#x8FDB;&#x5165;c&#x51FD;&#x6570; &#xFF0C;&#x5173;&#x95ED;&#x770B;&#x95E8;&#x72D7; bl clock_init @&#x8FDB;&#x5165;c&#x51FD;&#x6570;&#xFF0C;&#x521D;&#x59CB;&#x5316;&#x65F6;&#x949F; bl memsetup @&#x8FDB;&#x5165;c&#x51FD;&#x6570;&#xFF0C;&#x8BBE;&#x7F6E;&#x5185;&#x5B58; bl copy_steppingstone_to_sdram @&#x8FDB;&#x5165;c&#x51FD;&#x6570;&#xFF0C;&#x590D;&#x5236;&#x4EE3;&#x7801;&#x5230;sdram ldr pc,=on_sdram @&#x8FDB;&#x5165;sdram&#x8FD0;&#x884C;on_sdram: ldr sp,=0x34000000 @&#x8BBE;&#x7F6E;&#x6808;&#x9876;&#x6307;&#x9488; ldr lr,=halt_loop ldr pc,=main @&#x8FDB;&#x5165;main&#x51FD;&#x6570;halt_loop: b halt_loop init.c123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354#include &quot;s3c24xx.h&quot;void disable_watch_dog(void);void clock_init(void);void memsetup (void);void copy_steppingstone_to_sdram(void);#define S3C2440_MPLL_200HZ ((0x5c&lt;&lt;12)|(0x01&lt;&lt;4)|(0x02))void disable_watch_dog(void){ WTCON=0;}void clock_init(void){ CLKDIVN=0x03; __asm__( &quot;mrc p15,0,r1,c1,c0,0\\n&quot; &quot;orr r1,r1,#0xc0000000\\n&quot; &quot;mcr p15,0,r1,c1,c0,0\\n&quot; ); MPLLCON=S3C2440_MPLL_200HZ;}void memsetup(void){ volatile unsigned long* p=(volatile unsigned long*)MEM_CTL_BASE; /* &#x5B58;&#x50A8;&#x63A7;&#x5236;&#x5668;13&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x503C; */ p[0] = 0x22011110; //BWSCON p[1] = 0x00000700; //BANKCON0 p[2] = 0x00000700; //BANKCON1 p[3] = 0x00000700; //BANKCON2 p[4] = 0x00000700; //BANKCON3 p[5] = 0x00000700; //BANKCON4 p[6] = 0x00000700; //BANKCON5 p[7] = 0x00018005; //BANKCON6 p[8] = 0x00018005; //BANKCON7 /* REFRESH, * HCLK=12MHz: 0x008C07A3, * HCLK=100MHz: 0x008C04F4 */ p[9] = 0x008C04F4; p[10] = 0x000000B1; //BANKSIZE p[11] = 0x00000030; //MRSRB6 p[12] = 0x00000030; //MRSRB7}void copy_steppingstone_to_sdram(void){ unsigned int * pdwSrc=(unsigned int *)0; unsigned int * pdwDest=(unsigned int *)0x30000000; while(pdwSrc&lt;(unsigned int*)4096){ *pdwDest=*pdwSrc; pdwSrc++; pdwDest++; }} main.c1234567891011121314#include &quot;serial.h&quot;int main(){ unsigned char c; uart0_init(); while(1){ c=getc(); if(isDigit(c)||isLetter(c)){ putc(c+1); } } return 0;} serial.h12345void uart0_init(void);void putc(unsigned char c);unsigned char getc(void);int isDigit(unsigned char c);int isLetter(unsigned char c); serial.c12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#include &quot;s3c24xx.h&quot;#include &quot;serial.h&quot;#define TXD0READY (1&lt;&lt;2)#define RXD0READY (1)#define PCLK 50000000#define UART_CLK PCLK#define UART_BAUD_RATE 115200#define UART_BRD ((UART_CLK/(UART_BAUD_RATE*16))-1)void uart0_init(void){ GPHCON |=0xa0; GPHUP =0x0c; ULCON0=0x03; UCON0=0x05; UFCON0=0x00; UMCON0=0x00; UBRDIV0=UART_BRD;}void putc(unsigned char c){ while(!(UTRSTAT0 &amp; TXD0READY)); UTXH0=c;}unsigned char getc(void){ while(!(UTRSTAT0 &amp; RXD0READY)); return URXH0;}int isDigit(unsigned char c){ if( c&gt;=&apos;0&apos; &amp;&amp; c&lt;=&apos;9&apos;){ return 1; } else{ return 0; }}int isLetter(unsigned char c){ if(c&gt;=&apos;a&apos;&amp;&amp;c&lt;=&apos;z&apos;){ return 1; } else if (c&gt;= &apos;A&apos; &amp;&amp; c&lt;=&apos;Z&apos;){ return 1; } else{ return 0; }} s3c24xx.h123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475/* WOTCH DOG register */#define WTCON (*(volatile unsigned long *)0x53000000)/* SDRAM regisers */#define MEM_CTL_BASE 0x48000000#define SDRAM_BASE 0x30000000/* NAND Flash registers */#define NFCONF (*(volatile unsigned int *)0x4e000000)#define NFCMD (*(volatile unsigned char *)0x4e000004)#define NFADDR (*(volatile unsigned char *)0x4e000008)#define NFDATA (*(volatile unsigned char *)0x4e00000c)#define NFSTAT (*(volatile unsigned char *)0x4e000010)/*GPIO registers*/#define GPBCON (*(volatile unsigned long *)0x56000010)#define GPBDAT (*(volatile unsigned long *)0x56000014)#define GPFCON (*(volatile unsigned long *)0x56000050)#define GPFDAT (*(volatile unsigned long *)0x56000054)#define GPFUP (*(volatile unsigned long *)0x56000058)#define GPGCON (*(volatile unsigned long *)0x56000060)#define GPGDAT (*(volatile unsigned long *)0x56000064)#define GPGUP (*(volatile unsigned long *)0x56000068)#define GPHCON (*(volatile unsigned long *)0x56000070)#define GPHDAT (*(volatile unsigned long *)0x56000074)#define GPHUP (*(volatile unsigned long *)0x56000078)/*UART registers*/#define ULCON0 (*(volatile unsigned long *)0x50000000)#define UCON0 (*(volatile unsigned long *)0x50000004)#define UFCON0 (*(volatile unsigned long *)0x50000008)#define UMCON0 (*(volatile unsigned long *)0x5000000c)#define UTRSTAT0 (*(volatile unsigned long *)0x50000010)#define UTXH0 (*(volatile unsigned char *)0x50000020)#define URXH0 (*(volatile unsigned char *)0x50000024)#define UBRDIV0 (*(volatile unsigned long *)0x50000028)/*interrupt registes*/#define SRCPND (*(volatile unsigned long *)0x4A000000)#define INTMOD (*(volatile unsigned long *)0x4A000004)#define INTMSK (*(volatile unsigned long *)0x4A000008)#define PRIORITY (*(volatile unsigned long *)0x4A00000c)#define INTPND (*(volatile unsigned long *)0x4A000010)#define INTOFFSET (*(volatile unsigned long *)0x4A000014)#define SUBSRCPND (*(volatile unsigned long *)0x4A000018)#define INTSUBMSK (*(volatile unsigned long *)0x4A00001c)/*external interrupt registers*/#define EINTMASK (*(volatile unsigned long *)0x560000a4)#define EINTPEND (*(volatile unsigned long *)0x560000a8)/*clock registers*/#define LOCKTIME (*(volatile unsigned long *)0x4c000000)#define MPLLCON (*(volatile unsigned long *)0x4c000004)#define UPLLCON (*(volatile unsigned long *)0x4c000008)#define CLKCON (*(volatile unsigned long *)0x4c00000c)#define CLKSLOW (*(volatile unsigned long *)0x4c000010)#define CLKDIVN (*(volatile unsigned long *)0x4c000014)/*PWM &amp; Timer registers*/#define TCFG0 (*(volatile unsigned long *)0x51000000)#define TCFG1 (*(volatile unsigned long *)0x51000004)#define TCON (*(volatile unsigned long *)0x51000008)#define TCNTB0 (*(volatile unsigned long *)0x5100000c)#define TCMPB0 (*(volatile unsigned long *)0x51000010)#define TCNTO0 (*(volatile unsigned long *)0x51000014)#define GSTATUS1 (*(volatile unsigned long *)0x560000B0) Makefile123456789101112131415objs := head.o init.o serial.o main.ouart.bin: $(objs) arm-linux-ld -Tuart.lds -o uart_elf $^ arm-linux-objcopy -O binary -S uart_elf $@ arm-linux-objdump -D -m arm uart_elf &gt; uart.dis %.o:%.c arm-linux-gcc -Wall -O2 -c -o $@ $&lt;%.o:%.S arm-linux-gcc -Wall -O2 -c -o $@ $&lt;clean: rm -f uart.bin uart_elf uart.dis *.o &#x5907;&#x6CE8;TTL/CMOS &#x903B;&#x8F91;&#x7535;&#x5E73;(0-5v,0-3.3v,0-2.5v)RS232 3~12v-&gt;0 -3~-12v-&gt;1","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]定时器中断例程","slug":"T-定时器中断例程","date":"2016-02-25T13:54:21.000Z","updated":"2019-06-06T11:12:46.487Z","comments":true,"path":"2016/02/25/T-定时器中断例程/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/25/T-定时器中断例程/","excerpt":"","text":"&#x7CFB;&#x7EDF;&#x65F6;&#x949F;&#x548C;&#x5B9A;&#x65F6;&#x5668;&#x65F6;&#x949F;&#x63A7;&#x5236;&#x903B;&#x8F91;PLL&#xFF1A;UPLL&#x4E13;&#x7528;&#x4E8E;USB&#x8BBE;&#x5907;,MPLL&#x7528;&#x4E8E;FCLK,HCLK,PLCKFCLK &#x7528;&#x4E8E;CPU&#x6838;HCLK &#x7528;&#x4E8E;AHB&#x603B;&#x7EBF;&#x8BBE;&#x5907;:cpu&#x6838;,&#x5B58;&#x50A8;&#x63A7;&#x5236;&#x5668;,&#x4E2D;&#x65AD;&#x63A7;&#x5236;&#x5668;,LCD&#x63A7;&#x5236;&#x5668;,DMA,USB.PCLK &#x7528;&#x4E8E;APB&#x603B;&#x7EBF;&#x8BBE;&#x5907;:watchdog,IIS,I2C,PWM&#x5B9A;&#x65F6;&#x5668;,MMC&#x63A5;&#x53E3;,ADC,UART,GPIO,SPI MPLL&#x542F;&#x52A8;&#x8FC7;&#x7A0B;&#xFF1A;@1 &#x4E0A;&#x7535;&#x540E;&#x6676;&#x632F;&#x7A33;&#x5B9A;&#x8F93;&#x51FA;,FCLK=fin(&#x6676;&#x632F;&#x9891;&#x7387;,&#x5916;&#x90E8;&#x8F93;&#x5165;&#x65F6;&#x949F;),nRESET&#x6062;&#x590D;&#x9AD8;&#x7535;&#x5E73;,CPU&#x6307;&#x4EE4;&#x6267;&#x884C;@2 &#x7A0B;&#x5E8F;&#x8FD0;&#x884C;&#x5F00;&#x59CB;,&#x8BBE;&#x5B9A;MPLL,&#x7ECF;&#x8FC7;LOCKTIME,MPLL&#x7A33;&#x5B9A;&#x8F93;&#x51FA;,LOCKTIME&#x65F6;FCLK&#x505C;&#x632F;,CPU&#x505C;&#x6B62;@3 LOCKTIME&#x540E;,CPU&#x5DE5;&#x4F5C;&#x4E8E;FCLK &#x542F;&#x52A8;MPLL&#x8BBE;&#x7F6E;3&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#xFF1A;@1 LOCKTIME&#xFF1A;[31:16]UPLL [15:0]MPLL &#x9ED8;&#x8BA4;:0xffffffff @2 MPLLCON:&#x8BBE;&#x7F6E;FCLK&#x4E0E;fin&#x7684;&#x500D;&#x6570;[19:12]MDIV [9:4]PDIV [1:0]SDIV&#x8BA1;&#x7B97;&#x516C;&#x5F0F;&#xFF1A;MPLL(FCLK)=(2mfin)/(p*2^s) m=MDIV+8 p=PDIV+2 s=SDIV @3 CLKDIVN:&#x8BBE;&#x7F6E;FCLK,HCLK,PCLK&#x4E09;&#x8005;&#x7684;&#x6BD4;&#x4F8B;[2:1] HDIVN [0]PDIVN CAMDIVN:{HCLK4_HALF [9] HCLK3_HALF [8]} &#x5907;&#x6CE8;&#xFF1A;HDIVN&#x975E;&#x96F6;,CPU&#x603B;&#x7EBF;&#x6A21;&#x5F0F;fast bus mode-&gt;asyuchronous bus mode123mrc p15,0,r1,c1,c0,0orr r1,r1,#0xc0000000mcr p15,0,r1,c1,c0,0 PWM(&#x53EF;&#x8C03;&#x5236;&#x8109;&#x51B2;)&#x5B9A;&#x65F6;&#x5668;&#xFF1A;@1 &#x63CF;&#x8FF0;&#xFF1A;S3C2440&#x6709;5&#x4E2A;16&#x4F4D;&#x5B9A;&#x65F6;&#x5668;,0,1,2,3&#x6709;&#x8F93;&#x51FA;&#x5F15;&#x811A;,4&#x6CA1;&#x6709;&#x8F93;&#x51FA;&#x5F15;&#x811A;2&#x4E2A;8&#x4F4D;&#x9884;&#x5206;&#x9891;&#x5668;,&#x5B9A;&#x65F6;&#x5668;0,1 &#x5171;&#x7528;&#x7B2C;&#x4E00;&#x4E2A;&#x9884;&#x5206;&#x9891;&#x5668;,&#x5B9A;&#x65F6;&#x5668;2,3,4&#x5171;&#x7528;&#x7B2C;&#x4E8C;&#x4E2A;&#x9884;&#x5206;&#x9891;&#x5668;&#x4E8C;&#x7EA7;&#x5206;&#x9891;&#x5668;&#xFF1A;1/2,1/4,1/8,1/16@2 &#x5BC4;&#x5B58;&#x5668;&#x914D;&#x7F6E;&#xFF1A; TCFG0 [7:0] &#x63A7;&#x5236;&#x9884;&#x5206;&#x9891;&#x5668;0 [15:8] &#x63A7;&#x5236;&#x9884;&#x5206;&#x9891;&#x5668;1 &#x503C;&#x57DF;&#xFF1A;0~255&#x9884;&#x5206;&#x9891;&#x5668;&#x8F93;&#x51FA;&#x9891;&#x7387;&#xFF1A;PCLK/value+1 TCFG1 [3:0]{&#x5B9A;&#x65F6;&#x5668;0} [7:4]{&#x5B9A;&#x65F6;&#x5668;1} [11:8]{&#x5B9A;&#x65F6;&#x5668;2} [15:12]{&#x5B9A;&#x65F6;&#x5668;3} [19:16]{&#x5B9A;&#x65F6;&#x5668;4}&#x53C2;&#x6570;&#xFF1A;0000=1/2 0001=1/4 0010=1/8 0011=1/16&#x4E8C;&#x7EA7;&#x5206;&#x9891;&#x5668;&#x8F93;&#x51FA;&#x9891;&#x7387;&#xFF1A;PCLK/(value+1)/(divider value) divider value:2,4,8,16 TCNTBn/TCMPBn n:0~4TCNTBn [15:0] &#x521D;&#x59CB;&#x8BA1;&#x6570;&#x503C;TCMPBn [15:0] &#x6BD4;&#x8F83;&#x503C;TCON [3:0]{timer0} [11:8]{timer1} [15:12]{timer2} [19:16]{timer3} [22:20]{timer4}timer0 [0] {0:stop 1:start} [1]{0:not-used 1:&#x624B;&#x52A8;&#x66F4;&#x65B0;} [2] {0:TOUT0&#x4E0D;&#x53CD;&#x8F6C; 1:TOUT0&#x53CD;&#x8F6C;} [3]{0:not-auto-load 1:auto-load}WATCHDOG&#x5B9A;&#x65F6;&#x5668;:@1 WTCON:[0] {0:&#x4E0D;&#x8F93;&#x51FA;&#x590D;&#x4F4D;&#x4FE1;&#x53F7; 1:&#x8F93;&#x51FA;&#x590D;&#x4F4D;&#x4FE1;&#x53F7;}[2] {0:&#x7981;&#x6B62;&#x4E2D;&#x65AD; 1:&#x4F7F;&#x80FD;&#x4E2D;&#x65AD;}[4:3] 00:16 01:32 10:64 11:128[5] {0:&#x505C;&#x6B62; 1:&#x542F;&#x52A8;}[15:8] &#x9884;&#x5206;&#x9891;&#x5668; 0~255&#x6700;&#x7EC8;&#x8F93;&#x51FA;&#x9891;&#x7387;&#xFF1A;PCLK/(value+1)/(divider value) divider value:16 32 64 128@2 WTDAT:&#x8BA1;&#x6570;&#x4E3A;0&#x65F6; WTDAT-&gt;WTCNT,&#x521D;&#x6B21;&#x542F;&#x52A8; WTDAT&#x81EA;&#x52A8;&#x4F20;&#x5165;WTCNT@3 WTCNT&#xFF1A;&#x542F;&#x52A8;&#x65F6;WATCHDOG&#x524D; &#x5199;&#x5165;&#x521D;&#x59CB;&#x8BA1;&#x6570;&#x503C; WTCNT=value WTDAT=value&#x4E3A;0&#x65F6;&#xFF1A;&#x4E2D;&#x65AD;&#x4F7F;&#x80FD;-&gt;&#x53D1;&#x51FA;&#x4E2D;&#x65AD; | WATCHDOG&#x529F;&#x80FD;&#x4F7F;&#x80FD;-&gt;&#x53D1;&#x51FA;&#x590D;&#x4F4D;&#x4FE1;&#x53F7; &#x6E90;&#x7801;head.S init.c12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576#include &quot;s3c24xx.h&quot; void disable_watch_dog(void);void clock_init(void);void memsetup(void);void copy_steppingstone_to_sdram(void);void init_led(void);void timer0_init(void);void init_irq(void);void disable_watch_dog(){ WTCON=0;}#define S3C2440_MPLL_200MHZ ((0x5c&lt;&lt;12)|(0x01&lt;&lt;4)|(0x02))void clock_init(){ CLKDIVN=0x03; __asm__( &quot;mrc p15,0,r1,c1,c0,0\\n&quot; &quot;orr r1,r1,#0xc0000000\\n&quot; &quot;mcr p15,0,r1,c1,c0,0\\n&quot; ); MPLLCON=S3C2440_MPLL_200MHZ;}void memsetup(){ volatile unsigned long *p = (volatile unsigned long *)MEM_CTL_BASE; /* &#x5B58;&#x50A8;&#x63A7;&#x5236;&#x5668;13&#x4E2A;&#x5BC4;&#x5B58;&#x5668;&#x7684;&#x503C; */ p[0] = 0x22011110; //BWSCON p[1] = 0x00000700; //BANKCON0 p[2] = 0x00000700; //BANKCON1 p[3] = 0x00000700; //BANKCON2 p[4] = 0x00000700; //BANKCON3 p[5] = 0x00000700; //BANKCON4 p[6] = 0x00000700; //BANKCON5 p[7] = 0x00018005; //BANKCON6 p[8] = 0x00018005; //BANKCON7 /* REFRESH, * HCLK=12MHz: 0x008C07A3, * HCLK=100MHz: 0x008C04F4 */ p[9] = 0x008C04F4; p[10] = 0x000000B1; //BANKSIZE p[11] = 0x00000030; //MRSRB6 p[12] = 0x00000030; //MRSRB7}void copy_steppingstone_to_sdram(void){ unsigned int *pdwSrc = (unsigned int *)0; unsigned int *pdwDest = (unsigned int *)0x30000000; while (pdwSrc &lt; (unsigned int *)4096) { *pdwDest = *pdwSrc; pdwDest++; pdwSrc++; }}#define GPF4_out (1&lt;&lt;(4*2)) // LED1#define GPF5_out (1&lt;&lt;(5*2)) // LED2#define GPF6_out (1&lt;&lt;(6*2)) // LED3void init_led(){ GPFCON = (GPF4_out|GPF5_out|GPF6_out);}void timer0_init(){ TCFG0 = 99; // &#x9884;&#x5206;&#x9891;&#x5668;0 = 99 TCFG1 = 0x03; // &#x9009;&#x62E9;16&#x5206;&#x9891; TCNTB0 = 31250; // 1&#x79D2;&#x949F;&#x89E6;&#x53D1;&#x4E00;&#x6B21;&#x4E2D;&#x65AD; TCON |= (1&lt;&lt;1); // &#x624B;&#x52A8;&#x66F4;&#x65B0; TCON = 0x09; // &#x81EA;&#x52A8;&#x52A0;&#x8F7D;&#xFF0C;&#x6E05;&#x201C;&#x624B;&#x52A8;&#x66F4;&#x65B0;&#x201D;&#x4F4D;&#xFF0C;&#x542F;&#x52A8;&#x5B9A;&#x65F6;&#x5668;0}void init_irq(){ INTMSK &amp;= ~(1&lt;&lt;10);} interrupt.c123456789#include &quot;s3c24xx.h&quot;void Timer0_Handle(){ if(INTOFFSET==10){ GPFDAT = ~(GPFDAT &amp; (0x7 &lt;&lt; 4));//LED&#x72B6;&#x6001;&#x7FFB;&#x8F6C; } SRCPND=1&lt;&lt;INTOFFSET; INTPND=INTPND;} main.c12345int main(void){ while(1); return 0;} s3c24xx.h123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475/* WOTCH DOG register */#define WTCON (*(volatile unsigned long *)0x53000000)/* SDRAM regisers */#define MEM_CTL_BASE 0x48000000#define SDRAM_BASE 0x30000000/* NAND Flash registers */#define NFCONF (*(volatile unsigned int *)0x4e000000)#define NFCMD (*(volatile unsigned char *)0x4e000004)#define NFADDR (*(volatile unsigned char *)0x4e000008)#define NFDATA (*(volatile unsigned char *)0x4e00000c)#define NFSTAT (*(volatile unsigned char *)0x4e000010)/*GPIO registers*/#define GPBCON (*(volatile unsigned long *)0x56000010)#define GPBDAT (*(volatile unsigned long *)0x56000014)#define GPFCON (*(volatile unsigned long *)0x56000050)#define GPFDAT (*(volatile unsigned long *)0x56000054)#define GPFUP (*(volatile unsigned long *)0x56000058)#define GPGCON (*(volatile unsigned long *)0x56000060)#define GPGDAT (*(volatile unsigned long *)0x56000064)#define GPGUP (*(volatile unsigned long *)0x56000068)#define GPHCON (*(volatile unsigned long *)0x56000070)#define GPHDAT (*(volatile unsigned long *)0x56000074)#define GPHUP (*(volatile unsigned long *)0x56000078)/*UART registers*/#define ULCON0 (*(volatile unsigned long *)0x50000000)#define UCON0 (*(volatile unsigned long *)0x50000004)#define UFCON0 (*(volatile unsigned long *)0x50000008)#define UMCON0 (*(volatile unsigned long *)0x5000000c)#define UTRSTAT0 (*(volatile unsigned long *)0x50000010)#define UTXH0 (*(volatile unsigned char *)0x50000020)#define URXH0 (*(volatile unsigned char *)0x50000024)#define UBRDIV0 (*(volatile unsigned long *)0x50000028)/*interrupt registes*/#define SRCPND (*(volatile unsigned long *)0x4A000000)#define INTMOD (*(volatile unsigned long *)0x4A000004)#define INTMSK (*(volatile unsigned long *)0x4A000008)#define PRIORITY (*(volatile unsigned long *)0x4A00000c)#define INTPND (*(volatile unsigned long *)0x4A000010)#define INTOFFSET (*(volatile unsigned long *)0x4A000014)#define SUBSRCPND (*(volatile unsigned long *)0x4A000018)#define INTSUBMSK (*(volatile unsigned long *)0x4A00001c)/*external interrupt registers*/#define EINTMASK (*(volatile unsigned long *)0x560000a4)#define EINTPEND (*(volatile unsigned long *)0x560000a8)/*clock registers*/#define LOCKTIME (*(volatile unsigned long *)0x4c000000)#define MPLLCON (*(volatile unsigned long *)0x4c000004)#define UPLLCON (*(volatile unsigned long *)0x4c000008)#define CLKCON (*(volatile unsigned long *)0x4c00000c)#define CLKSLOW (*(volatile unsigned long *)0x4c000010)#define CLKDIVN (*(volatile unsigned long *)0x4c000014)/*PWM &amp; Timer registers*/#define TCFG0 (*(volatile unsigned long *)0x51000000)#define TCFG1 (*(volatile unsigned long *)0x51000004)#define TCON (*(volatile unsigned long *)0x51000008)#define TCNTB0 (*(volatile unsigned long *)0x5100000c)#define TCMPB0 (*(volatile unsigned long *)0x51000010)#define TCNTO0 (*(volatile unsigned long *)0x51000014)#define GSTATUS1 (*(volatile unsigned long *)0x560000B0) Makefile123456789101112131415objs := head.o init.o interrupt.o main.otimer.bin: $(objs) arm-linux-ld -Ttimer.lds -o timer_elf $^ arm-linux-objcopy -O binary -S timer_elf $@ arm-linux-objdump -D -m arm timer_elf &gt; timer.dis %.o:%.c arm-linux-gcc -Wall -O2 -c -o $@ $&lt;%.o:%.S arm-linux-gcc -Wall -O2 -c -o $@ $&lt;clean: rm -f timer.bin timer_elf timer.dis *.o &#x5907;&#x6CE8;&#x5B9E;&#x9A8C;&#x5F00;&#x53D1;&#x677F;CPU S3C2440A","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]基于Centos的VPN服务搭建","slug":"T-基于Centos的VPN服务搭建","date":"2016-02-20T14:29:16.000Z","updated":"2019-06-06T09:55:24.876Z","comments":true,"path":"2016/02/20/T-基于Centos的VPN服务搭建/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/20/T-基于Centos的VPN服务搭建/","excerpt":"","text":"&#x73AF;&#x5883;&#x63CF;&#x8FF0; &#x7CFB;&#x7EDF;:Centos 6.5 (64&#x4F4D;)&#x670D;&#x52A1;&#x5668;&#x5916;&#x7F51;IP:47.88.34.7 &#x914D;&#x7F6E;&#x73AF;&#x5883;&#x68C0;&#x6D4B;1.&#x68C0;&#x67E5;&#x7CFB;&#x7EDF;&#x5185;&#x6838;&#x662F;&#x5426;&#x652F;&#x6301;MPPE&#x8865;&#x4E01;12modprobe ppp-compress-18 &amp;&amp;echo success&#x663E;&#x793A;success&#x5219;&#x652F;&#x6301; 2.&#x68C0;&#x67E5;&#x7CFB;&#x7EDF;&#x662F;&#x5426;&#x5F00;&#x542F;TUN/TAP&#x652F;&#x6301;123cat /dev/net/tun&#x5982;&#x679C;&#x8FD9;&#x6761;&#x6307;&#x4EE4;&#x663E;&#x793A;&#x7ED3;&#x679C;&#x4E3A;&#x4E0B;&#x9762;&#x7684;&#x6587;&#x672C;&#xFF0C;&#x5219;&#x8868;&#x660E;&#x901A;&#x8FC7;:File descriptor in bad state 3.&#x68C0;&#x67E5;&#x7CFB;&#x7EDF;&#x662F;&#x5426;&#x5F00;&#x542F;ppp&#x652F;&#x6301;123cat /dev/ppp&#x5982;&#x679C;&#x8FD9;&#x6761;&#x6307;&#x4EE4;&#x663E;&#x793A;&#x7ED3;&#x679C;&#x4E3A;&#x4E0B;&#x9762;&#x7684;&#x6587;&#x672C;&#xFF0C;&#x5219;&#x8868;&#x660E;&#x901A;&#x8FC7;:No such device or address &#x5B89;&#x88C5;pptp&#x8F6F;&#x4EF6;&#x5305;&#x94FE;&#x63A5; ppphttp://poptop.sourceforge.net/yum/stable/packages/ppp-2.4.4-14.1.rhel5.x86_64.rpmpptpdhttp://poptop.sourceforge.net/yum/stable/packages/pptpd-1.4.0-1.rhel5.x86_64.rpm 123cd /optrpm -ivh ppp-2.4.4-14.1.rhel5.x86_64.rpm #&#x5B89;&#x88C5;ppprpm -ivh pptpd-1.4.0-1.rhel5.x86_64.rpm #&#x5B89;&#x88C5;pptp &#x914D;&#x7F6E;pptp123vi /etc/ppp/options.pptpdms-dns 8.8.8.8 ms-dns 8.8.4.4 123vi /etc/ppp/chap-secrets #&#x8BBE;&#x7F6E;pptp&#x62E8;&#x53F7;&#x7528;&#x6237;&#x548C;&#x5BC6;&#x7801;&#xFF08;&#x53EF;&#x4EE5;&#x8BBE;&#x7F6E;&#x591A;&#x4E2A;&#x7528;&#x6237;&#xFF0C;&#x6BCF;&#x884C;&#x4E00;&#x4E2A;&#xFF09;# client server secret IP addressesfeng pptpd 123456 * #(&#x4F8B;&#x5B50;) 123vi /etc/pptpd.conf #&#x8BBE;&#x7F6E;pptp&#x670D;&#x52A1;&#x5668;IP&#x5730;&#x5740;&#xFF0C;&#x8BBE;&#x7F6E;vpn&#x62E8;&#x5165;&#x5BA2;&#x6237;&#x7AEF;ip&#x5730;&#x5740;&#x6C60;localip 192.168.0.1 #&#x8BBE;&#x7F6E;pptp&#x865A;&#x62DF;&#x62E8;&#x53F7;&#x670D;&#x52A1;&#x5668;IP&#x5730;&#x5740;&#xFF08;&#x6CE8;&#x610F;&#xFF1A;&#x4E0D;&#x662F;&#x670D;&#x52A1;&#x5668;&#x672C;&#x8EAB;&#x7684;IP&#x5730;&#x5740;&#xFF09;remoteip 192.168.0.234-238,192.168.0.245 #&#x4E3A;&#x62E8;&#x5165;vpn&#x7684;&#x7528;&#x6237;&#x52A8;&#x6001;&#x5206;&#x914D;192.168.0.234-238&#x7684;IP&#x5730;&#x5740; &#x5F00;&#x542F;&#x670D;&#x52A1;&#x5668;&#x7CFB;&#x7EDF;&#x8DEF;&#x7531;&#x6A21;&#x5F0F;&#xFF0C;&#x652F;&#x6301;&#x5305;&#x8F6C;&#x53D1;123vi /etc/sysctl.conf net.ipv4.ip_forward = 1 #&#x8BBE;&#x7F6E;&#x4E3A;1sysctl &#x2013;p &#x8BBE;&#x7F6E;&#x9632;&#x706B;&#x5899;&#x8F6C;&#x53D1;&#x89C4;&#x5219;12345678yum install iptables #&#x5B89;&#x88C5;&#x9632;&#x706B;&#x5899;service iptables start #&#x542F;&#x52A8;&#x9632;&#x706B;&#x5899;iptables -t nat -A POSTROUTING -s 192.168.0.0/255.255.255.0 -j SNAT --to-source &#x5185;&#x7F51;IP #&#x6DFB;&#x52A0;&#x5185;&#x7F51;&#x89C4;&#x5219;iptables -A FORWARD -p tcp --syn -s 192.168.0.0/255.255.255.0 -j TCPMSS --set-mss 1356 iptables -t nat -A POSTROUTING -s 192.168.0.0/24 -o eth1 -j MASQUERADE #&#x5916;&#x7F51;&#x8F6C;&#x53D1;&#x89C4;&#x5219;(&#x6765;&#x81EA;192.168.0.0&#x7F51;&#x6BB5;&#x7684;&#x8BBF;&#x95EE;&#x6D41;&#x7ECF;eth1&#x7F51;&#x5361;&#x505A;&#x8F6C;&#x53D1;)/etc/init.d/iptables save #&#x4FDD;&#x5B58;&#x9632;&#x706B;&#x5899;&#x8BBE;&#x7F6E;/etc/sysconfig/iptables#&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x76EE;&#x5F55; &#x8BBE;&#x7F6E;&#x5F00;&#x673A;&#x81EA;&#x52A8;&#x5EFA;&#x7ACB;ppp&#x8BBE;&#x5907;&#x8282;&#x70B9;&#xFF08;&#x7CFB;&#x7EDF;&#x91CD;&#x65B0;&#x542F;&#x52A8;&#x540E;&#x6709;&#x53EF;&#x80FD;&#x4F1A;&#x4E22;&#x5931;&#x6B64;&#x6587;&#x4EF6;&#xFF0C;&#x5BFC;&#x81F4;pptp&#x5BA2;&#x6237;&#x7AEF;&#x62E8;&#x53F7;&#x51FA;&#x73B0;&#x9519;&#x8BEF;619&#xFF09;12vi /etc/rc.d/rc.local mknod /dev/ppp c 108 0 #&#x5728;&#x6587;&#x4EF6;&#x6700;&#x540E;&#x6DFB;&#x52A0;&#x6B64;&#x884C;&#x4EE3;&#x7801; &#x542F;&#x52A8;&#x76F8;&#x5173;&#x670D;&#x52A1;12service pptpd startservice iptables start &#x5C06;&#x670D;&#x52A1;&#x914D;&#x7F6E;&#x4E3A;&#x5F00;&#x673A;&#x81EA;&#x52A8;&#x542F;&#x52A8;12chkconfig pptpd onchkconfig iptables on &#x5907;&#x6CE8;1234567#&#x6E05;&#x7A7A;iptables&#x8F6C;&#x53D1;&#x89C4;&#x5219;iptables -F -t natiptables -X -t natiptables -Z -t nat#&#x5982;&#x679C;&#x4E0D;&#x5C0F;&#x5FC3;&#x914D;&#x7F6E;&#x4E86;&#x9519;&#x8BEF;&#x7684;&#x8F6C;&#x53D1;&#x89C4;&#x5219;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x4EE5;&#x4E0A;&#x4E09;&#x6761;&#x547D;&#x4EE4;&#x6E05;&#x7A7A;service iptables save#&#x6E05;&#x7A7A;&#x540E;&#x522B;&#x5FD8;&#x4E86;&#x518D;&#x6B21;&#x4F7F;&#x7528;&#x4FDD;&#x5B58;&#x547D;&#x4EE4;&#x5C06;&#x6E05;&#x7A7A;&#x540E;&#x7684;&#x914D;&#x7F6E;&#x5199;&#x5165;&#x6587;&#x4EF6;&#xFF0C;&#x5426;&#x5219;&#x91CD;&#x542F;&#x540E;&#x4E0A;&#x6B21;&#x914D;&#x7F6E;&#x7684;&#x8F6C;&#x53D1;&#x89C4;&#x5219;&#x53C8;&#x56DE;&#x6062;&#x590D;&#x3002; &#x8865;&#x5145;1234#&#x7F3A;&#x5C11;libpcap.so.0.9.4()(64bit)-&gt;ppp-2.4.4 &#x89E3;&#x51B3;&#x529E;&#x6CD5;rpm remove libpcapwget http://www.muug.mb.ca/mirror/centos/5.11/os/x86_64/CentOS/libpcap-0.9.4-15.el5.x86_64.rpmrpm -ivh libpcap-0.9.4-15.el5.x86_64.rpm","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"工具资源","slug":"工具资源","date":"2016-02-16T22:01:50.000Z","updated":"2019-04-09T08:21:15.095Z","comments":true,"path":"2016/02/17/工具资源/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/17/工具资源/","excerpt":"","text":"&#x5728;&#x7EBF;&#x6D41;&#x7A0B;&#x56FE;&#x7F16;&#x8F91;&#xFF1A;https://www.processon.com/ &#x7F16;&#x7A0B;&#x5B66;&#x4E60;&#x7F51;&#x7AD9;RUNOOB.COM&#xFF1A;http://www.runoob.com/ Jquery&#x67E5;&#x8BE2;&#x624B;&#x518C;http://www.php100.com/manual/jquery/ X86&#x5185;&#x8054;&#x6C47;&#x7F16;https://www.ibm.com/developerworks/cn/linux/sdk/assemble/inline/ &#x5FAE;&#x8F6F;&#x8BA4;&#x77E5;&#x670D;&#x52A1;https://www.azure.cn/cognitive-services/ ThinkPHP3.2 &#x624B;&#x518C;http://document.thinkphp.cn/manual_3_2.html#entrance_file APP INVENTORhttp://app.gzjkw.net/login/ Linux&#x5B8C;&#x5168;&#x6CE8;&#x91CA;http://www.oldlinux.org/index_cn.html HTML&#x989C;&#x8272;&#x8868;http://xh.5156edu.com/page/z1015m9220j18754.html OpenCV VS 2013&#x914D;&#x7F6E;http://www.cnblogs.com/cuteshongshong/p/4057193.html","categories":[{"name":"资源","slug":"资源","permalink":"http://fengjinyuan.github.io/categories/资源/"}],"tags":[{"name":"资源","slug":"资源","permalink":"http://fengjinyuan.github.io/tags/资源/"}]},{"title":"[T]Python-CS套接字模板","slug":"T-Python-CS套接字模板","date":"2016-02-16T22:00:47.000Z","updated":"2019-06-06T11:11:17.965Z","comments":true,"path":"2016/02/17/T-Python-CS套接字模板/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/17/T-Python-CS套接字模板/","excerpt":"","text":"UDP&#x7F16;&#x7A0B;&#x6A21;&#x677F; UDPClient.py1234567891011from socket import *serverName=&apos;localhost&apos; #IP&#x6216;&#x8005;&#x4E3B;&#x673A;&#x540D;serverPort=8888 #&#x7AEF;&#x53E3;&#x53F7;clientSocket=socket(AF_INET,SOCK_DGRAM) #AF_INET&#x4F7F;&#x7528;IPv4&#xFF0C;SOCK_DGRAM&#x4F7F;&#x7528;UDPmessage=input(&quot;Input lowercase sentence:&quot;)message=bytes(message,encoding=&quot;utf-8&quot;)clientSocket.sendto(message,(serverName,serverPort))modifiedMessage,serverAddress=clientSocket.recvfrom(2048)modifiedMessage=str(modifiedMessage,encoding=&quot;utf-8&quot;)print(modifiedMessage)clientSocket.close() UDPServer.py123456789from socket import *serverPort=8888serverSocket=socket(AF_INET,SOCK_DGRAM)serverSocket.bind((&apos;&apos;,serverPort))print(&quot;The server is ready to receive&quot;)while 1: message,clientAddress=serverSocket.recvfrom(2048) modifiedMessage=message.upper() serverSocket.sendto(modifiedMessage,clientAddress) TCP&#x7F16;&#x7A0B;&#x6A21;&#x677F; TCPClient.py123456789101112from socket import *serverName=&apos;localhost&apos;serverPort=8888clientSocket=socket(AF_INET,SOCK_STREAM) #SOCK_STREAM &#x4F7F;&#x7528;TCPclientSocket.connect((serverName,serverPort)) #&#x8FDB;&#x884C;&#x63E1;&#x624B;&#x8FDE;&#x63A5;message=input(&quot;Input lowercase sentence:&quot;)message=bytes(message,encoding=&quot;utf-8&quot;)clientSocket.send(message)modifiedMessage=clientSocket.recv(2048)modifiedMessage=str(modifiedMessage,encoding=&quot;utf-8&quot;)print(modifiedMessage)clientSocket.close() TCPServer.py123456789101112from socket import *serverPort=8888serverSocket=socket(AF_INET,SOCK_STREAM)serverSocket.bind((&apos;&apos;,serverPort))serverSocket.listen(1) #&#x76D1;&#x542C;&#x8BF7;&#x6C42;&#x7684;&#x5BA2;&#x6237;&#x7AEF;&#xFF0C;&#x53C2;&#x6570;&#x4E3A;&#x8BF7;&#x6C42;&#x8FDE;&#x63A5;&#x7684;&#x6700;&#x5927;&#x6570;print(&quot;The server is ready to receive&quot;)while 1: connectionSocket,addr=serverSocket.accept() #&#x63E1;&#x624B;&#x8FDE;&#x63A5;&#x6210;&#x529F;&#x521B;&#x5EFA;&#x8FDE;&#x63A5;&#x5957;&#x63A5;&#x5B57;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x4F20;&#x8F93; message=connectionSocket.recv(2048) modifiedMessage=message.upper() connectionSocket.send(modifiedMessage) connectionSocket.close() &#x533A;&#x522B;UDP&#x5728;&#x6BCF;&#x6B21;&#x4F20;&#x8F93;&#x5C06;&#x5206;&#x7EC4;&#x653E;&#x8FDB;&#x5957;&#x63A5;&#x5B57;&#x524D;&#x4E00;&#x5B9A;&#x8981;&#x9644;&#x4E0A;&#x76EE;&#x7684;&#x5730;&#x5730;&#x5740;(IP+port)TCP&#x901A;&#x8FC7;&#x63E1;&#x624B;&#x5957;&#x63A5;&#x5B57;&#x5EFA;&#x7ACB;&#x670D;&#x52A1;&#x7AEF;&#x4E0E;&#x5BA2;&#x6237;&#x7AEF;&#x7684;IP&#x548C;&#x7AEF;&#x53E3;&#x5173;&#x8054;&#xFF0C;&#x521B;&#x5EFA;&#x65B0;&#x5957;&#x63A5;&#x5B57;&#x7528;&#x4E8E;&#x6570;&#x636E;&#x4F20;&#x8F93;&#x3002; &#x5907;&#x6CE8;12345678Python 3.5#str to bytebytes(content,encoding=&quot;utf-8&quot;)str.encode(content)#byte to strstr(content,encoding=&quot;utf-8&quot;)bytes.decode(content)#Python 3 send,sendto &#x6D88;&#x606F;&#x4E3A;byte&#x7C7B;&#x578B;","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]SVN服务配置","slug":"T-SVN服务配置","date":"2016-02-15T13:10:15.000Z","updated":"2019-06-06T10:07:04.193Z","comments":true,"path":"2016/02/15/T-SVN服务配置/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/15/T-SVN服务配置/","excerpt":"","text":"&#x5B89;&#x88C5;SVN1.&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;1sudo apt-get install subversion &#x914D;&#x7F6E;SVN1.&#x9009;&#x62E9;svn&#x7684;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x7684;&#x653E;&#x7F6E;&#x4F4D;&#x7F6E;,&#x6B64;&#x5B9E;&#x9A8C;&#x9009;&#x62E9;/home1234cd /home(&#x8FDB;&#x5165;&#x8BE5;&#x76EE;&#x5F55;&#x4E0B;) sudo mkdir svn(&#x5EFA;&#x7ACB;svn&#x76EE;&#x5F55;) cd /home/svn sudo mkdir blog(&#x5EFA;&#x7ACB;svn&#x7248;&#x672C;&#x4ED3;&#x5E93;blog)(&#x53EF;&#x81EA;&#x5DF1;&#x8BBE;&#x5B9A;) 2.&#x521B;&#x5EFA;&#x7248;&#x672C;&#x4ED3;&#x5E93;12345sudo svnadmin create /home/svn/blog &#x547D;&#x4EE4;&#x6267;&#x884C;&#x5B8C;&#x4F1A;&#x6709;&#x4EE5;&#x4E0B;&#x6587;&#x4EF6;: conf/ db/ format hooks /locks &#x8FDB;&#x5165;conf&#x4F1A;&#x6709;&#x4EE5;&#x4E0B;&#x6587;&#x4EF6;: authz,passwd,svnserve.conf,hooks-evn.tmpl 3.&#x914D;&#x7F6E;svnerver.conf12345[general] anon-access = none auth-access = write password-db = passwd authz-db = authz 4.&#x914D;&#x7F6E;authz12345[groups] admin=root,feng (&#x81EA;&#x5B9A;&#x4E49;&#x7EC4;&#x540D;=&#x7EC4;&#x6210;&#x5458;,....) [/] @admin=rw(&#x6743;&#x9650;&#x8BBE;&#x5B9A;) *=r 5.&#x914D;&#x7F6E;passwd1234[users] #harry = harryssecret #sally = sallyssecret root=*********(&#x8BBE;&#x5B9A;&#x7528;&#x6237;&#x5BC6;&#x7801; &#x7528;&#x6237;&#x540D;=&#x5BC6;&#x7801;) &#x5F00;&#x542F;SVN1sudo svnserve -d -r /home/svn/ &#x5BA2;&#x6237;&#x7AEF;&#x68C0;&#x51FA;1svn://yourip/blog","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]Linux+Mysql+Nginx+Php","slug":"T-Linux-Mysql-Nginx-Php","date":"2016-02-15T12:49:12.000Z","updated":"2019-06-06T10:05:20.655Z","comments":true,"path":"2016/02/15/T-Linux-Mysql-Nginx-Php/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/15/T-Linux-Mysql-Nginx-Php/","excerpt":"","text":"&#x5B89;&#x88C5;Mysql1.&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;,&#x66F4;&#x65B0;&#x8F6F;&#x4EF6;1sudo apt-get update 2.&#x5728;&#x7EC8;&#x7AEF;&#x4E0B;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x4E0B;&#x8F7D;&#xFF0C;mysql(5.5)1sudo apt-get install mysql-server 3.&#x5B89;&#x88C5;&#x5B8C;&#x540E;&#x4F1A;&#x63D0;&#x793A;&#x8F93;&#x5165;&#x521D;&#x59CB;&#x7528;&#x6237;&#x540D;&#x4E0E;&#x5BC6;&#x7801;,&#x4F5C;&#x8005;&#x8BBE;&#x5B9A;root,123&#x5B89;&#x88C5;Nginx(nginx nginx-common nginx-core)1.&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;1apt-get install nginx 2.&#x5B89;&#x88C5;&#x5B8C;&#x6210;&#x540E;&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;1service nginx start 3.&#x6D4B;&#x8BD5;&#x662F;&#x5426;&#x5B89;&#x88C5;&#x6210;&#x529F; &#x6253;&#x5F00;&#x6D4F;&#x89C8;&#x5668;&#x8F93;&#x5165; 127.0.0.1&#xFF0C;&#x51FA;&#x73B0;Welcome to Nginx,&#x5373;&#x4E3A;&#x6210;&#x529F; &#x5B89;&#x88C5;php5(php5-fpm php5-mysql)1.&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;1apt-get install php5-fpm php5-mysql 2.&#x91CD;&#x542F;&#x7CFB;&#x7EDF;1reboot &#x914D;&#x7F6E;Nginx1.&#x5728;&#x7EC8;&#x7AEF;&#x8F93;&#x5165;&#x4EE5;&#x4E0B;&#x547D;&#x4EE4;&#x7528;&#x4EE5;&#x5907;&#x4EFD;cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.bak cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.bak 2.vi&#x8FDB;&#x5165;/etc/nginx/sites-available/default&#x4FEE;&#x6539;&#x4E3A;&#x4EE5;&#x4E0B;&#x5185;&#x5BB9; server{ listen 80 default_server; listen[::]:80 default_server ipv6only=on; root /usr/share/nginx/html;(&#x53EF;&#x6839;&#x636E;&#x81EA;&#x5DF1;&#x9700;&#x8981;&#x66F4;&#x6539; &#x4F8B;&#x5982;/www); index index.html index.htm index.php; server_name localhost; location / { try_files $uri $uri/ =404; } error_page 500 502 503 504 /50x.html; location = /50x.html{ root /usr/share/nginx/html; } location ~\\.php$ { fastcgi_split_path_info ^(.+\\.php)(/.+)$; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; include fastcgi_params; } } &#x914D;&#x7F6E;php51.&#x8FDB;&#x5165;/etc/php5/fpm/pool.d/www.conflisten = /var/run/php5-fpm.sock &#x6539;&#x4E3A; listen = 127.0.0.1:9000 2.&#x8FDB;&#x5165;&#x8FDB;&#x5165;/etc/php5/fpm/php.inicgi.fix_pathinfo =0; php&#x6269;&#x5C55;&#x6A21;&#x5757;&#x5B89;&#x88C5;sudo apt-get install php5-fpm sudo apt-get install php5-gd #Popular image manipulation library; used extensively by Wordpress and it&apos;s plugins. sudo apt-get install php5-cli # Makes the php5 command available to the terminal for php5 scripting sudo apt-get install php5-curl # Allows curl (file downloading tool) to be called from PHP5 sudo apt-get install php5-mcrypt # Provides encryption algorithms to PHP scripts sudo apt-get install php5-mysql # Allows PHP5 scripts to talk to a MySQL Database sudo apt-get install php5-readline # Allows PHP5 scripts to use the readline function &#x5907;&#x6CE8;&#xFF1A;&#x7CFB;&#x7EDF;&#x4E3A;Ubuntu 14.04","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"[T]Markdown的使用记录","slug":"T-Markdown的使用记录","date":"2016-02-14T12:28:35.000Z","updated":"2019-06-06T10:44:54.574Z","comments":true,"path":"2016/02/14/T-Markdown的使用记录/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/14/T-Markdown的使用记录/","excerpt":"","text":"&#x4E3A;&#x4E86;&#x5199;blog,&#x7B80;&#x5355;&#x7684;&#x5B66;&#x4E60;&#x4E86;&#x4E0B;&#x5982;&#x4F55;&#x4F7F;&#x7528;Markdown,&#x867D;&#x7136;&#x5F88;&#x7B80;&#x5355;&#x4F46;&#x662F;&#x4F9D;&#x7136;&#x503C;&#x5F97;&#x628A;&#x8FD9;&#x4E2A;&#x5B66;&#x4E60;&#x8FC7;&#x7A0B;&#x8BB0;&#x5F55;&#x4E0B;&#x6765;&#x3002;&#x6807;&#x9898;123456# &#x4E00;&#x7EA7;&#x6807;&#x9898;## &#x4E8C;&#x7EA7;&#x6807;&#x9898;### &#x4E09;&#x7EA7;&#x6807;&#x9898;#### &#x56DB;&#x7EA7;&#x6807;&#x9898;##### &#x4E94;&#x7EA7;&#x6807;&#x9898;###### &#x516D;&#x7EA7;&#x6807;&#x9898; &#x5217;&#x8868;12345678&#x65E0;&#x5E8F;&#x5217;&#x8868;* 1* 2* 3&#x6709;&#x5E8F;&#x5217;&#x8868;1. 12. 23. 3 &#x5F15;&#x7528;1&gt; &#x5F15;&#x7528;&#x5185;&#x5BB9; &#x56FE;&#x7247;&#x4E0E;&#x8FDE;&#x63A5;123[](url)&#x56FE;&#x7247;![](url) &#x7C97;&#x4F53;&#x4E0E;&#x659C;&#x4F53;12**&#x7C97;&#x4F53;***&#x659C;&#x4F53;* &#x4EE3;&#x7801;1`code` &#x5206;&#x5272;&#x7EBF;1*** &#x4F7F;&#x7528;&#x6CE8;&#x610F;&#xFF1A;&#x6807;&#x8BB0;+&#x7A7A;&#x683C;+&#x5185;&#x5BB9;","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]},{"title":"Forgetter","slug":"Forgetter","date":"2016-02-14T08:36:21.000Z","updated":"2019-04-09T12:06:44.212Z","comments":true,"path":"2016/02/14/Forgetter/","link":"","permalink":"http://fengjinyuan.github.io/2016/02/14/Forgetter/","excerpt":"","text":"Forgetter&#x770B;&#xFF0C;&#x90A3;&#x91CC;&#x6709;&#x4E2A;&#x4EBA;&#x3002;&#x5FD8;&#x8BB0;&#x4E86;&#x5403;&#x996D;&#xFF0C;&#x5DE5;&#x4F5C;&#x8FD8;&#x5728;&#x7EE7;&#x7EED;&#x3002;&#x5FD8;&#x8BB0;&#x4E86;&#x7761;&#x89C9;&#xFF0C;&#x7B14;&#x8FD8;&#x6CA1;&#x6709;&#x653E;&#x4E0B;&#x3002; &#x54DF;&#xFF0C;&#x8FD8;&#x662F;&#x90A3;&#x4E2A;&#x4EBA;&#x3002;&#x5FD8;&#x8BB0;&#x4E86;&#x5C0F;&#x5B66;&#xFF0C;&#x8DD1;&#x8FDB;&#x4E86;&#x4E2D;&#x5B66;&#x3002;&#x5FD8;&#x8BB0;&#x4E86;&#x4E2D;&#x5B66;&#xFF0C;&#x8D70;&#x8FDB;&#x4E86;&#x5927;&#x5B66;&#x3002; &#x54A6;&#xFF0C;&#x53C8;&#x662F;&#x90A3;&#x4E2A;&#x4EBA;&#x3002;&#x614C;&#x5F20;&#xFF0C;&#x6050;&#x60E7;&#xFF0C;&#x62C5;&#x5FE7;&#x3002;&#x614C;&#x5F20;&#x4EC0;&#x4E48;&#xFF0C;&#x5FD8;&#x8BB0;&#x4E86;&#x3002;&#x6050;&#x60E7;&#x4EC0;&#x4E48;&#xFF0C;&#x5FD8;&#x8BB0;&#x4E86;&#x3002;&#x62C5;&#x5FE7;&#x4EC0;&#x4E48;&#xFF0C;&#x5FD8;&#x8BB0;&#x4E86;&#x3002; &#x55EF;&#xFF0C;&#x4E00;&#x4E2A;&#x5065;&#x5FD8;&#x7684;&#x4EBA;&#x3002;","categories":[{"name":"杂文","slug":"杂文","permalink":"http://fengjinyuan.github.io/categories/杂文/"}],"tags":[{"name":"杂文","slug":"杂文","permalink":"http://fengjinyuan.github.io/tags/杂文/"}]},{"title":"Quick Start Hexo","slug":"Quick-Start-Hexo","date":"2015-11-06T03:16:52.000Z","updated":"2019-04-09T12:06:47.458Z","comments":true,"path":"2015/11/06/Quick-Start-Hexo/","link":"","permalink":"http://fengjinyuan.github.io/2015/11/06/Quick-Start-Hexo/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Config EnvironmentInstall Node.JSNode.JS Download Url:(https://nodejs.org/en/) Create Blog Environment1$ mkdir blog // Create a directory named &apos;blog&apos; Install Hexo under Blog Environment12$ cd blog$ npm install -g hexo-cli Create a new blog123$ hexo init myblog // generate a directory named &apos;myblog&apos; after performed$ cd myblog$ npm install Quick StartCreate a new post12$ cd myblog$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/categories/技术/"}],"tags":[{"name":"技术","slug":"技术","permalink":"http://fengjinyuan.github.io/tags/技术/"}]}]}